{"version":3,"sources":["styles/global.js","data/progress.js","shared/formattedText.js","shared/levellingItem.js","screens/levelling.js","shared/passiveItem.js","screens/passives.js","shared/trialItem.js","screens/trials.js","screens/about.js","shared/header.js","routes/genericStack.js","routes/drawer.js","App.js","web-build/register-service-worker.js"],"names":["globalStyles","StyleSheet","create","container","padding","flex","backgroundColor","alignItems","justifyContent","header","width","height","flexDirection","headerText","fontSize","color","fontWeight","section","sectionText","textAlign","headerMenuIcon","position","left","item","marginTop","borderColor","borderWidth","borderStyle","borderRadius","info","infoItem","complete","textDecorationLine","opacity","required","boss","area","quest","waypoint","trial","ProgressContext","createContext","initialState","completed","reducer","state","id","newState","includes","filter","checkId","storeData","progress","a","async","AsyncStorage","setItem","JSON","stringify","console","error","ProgressContextProvider","props","React","useReducer","dispatch","useEffect","getItem","value","parse","loadData","then","loadedProgress","log","Provider","children","FormattedText","taskId","this","style","indexObj","ret","forEach","index","push","Text","key","parseTextFragment","fragment","defaultStyle","fragments","splitString","type","split","uniqueKey","i","idx","concat","newStyle","toString","Component","LevellingItem","nextProps","act","pressHandler","objectiveStyle","rewardStyle","optional","objectiveLine","text","infoLine","minLvl","direction","rewards","reward","passive","num","View","TouchableOpacity","onPress","Levelling","route","useContext","SafeAreaView","SectionList","sections","content","acts","keyExtractor","renderItem","extraData","renderSectionHeader","title","PassiveItem","wp","Passives","passives","map","o","Object","data","TrialItem","name","Trials","trials","some","maps","About","Header","navigation","MaterialIcons","openDrawer","Stack","createStackNavigator","genericNavigator","component","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","options","headerTitle","Drawer","createDrawerNavigator","drawerNavigator","NavigationContainer","App","navigator","window","addEventListener","serviceWorker","register","scope","catch"],"mappings":"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","file":"static/js/app.9b255682.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\n\nexport const globalStyles = StyleSheet.create({\n  container: {\n    padding:         20,\n    flex:            1,\n    backgroundColor: '#fff',\n    alignItems:      'center',\n    justifyContent:  'center',\n  },\n  header: {\n    width:  \"100%\",\n    height: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  headerText: {\n    fontSize:   18,\n    color:      \"#333\",\n    fontWeight: \"bold\"\n  },\n  section: {\n    padding: 10,\n    width:  \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  sectionText: {\n    fontSize:   18,\n    color:      \"#333\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  headerMenuIcon: {\n    fontSize: 28,\n    color:    \"#333\",\n    position: \"absolute\",\n    left:     0\n  },\n  item: {\n    padding:10,\n    marginTop: 10,\n    borderColor: \"#bbb\",\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    borderRadius: 10\n  },\n  info: {\n    flexDirection: \"row\"\n  },\n  infoItem: {\n    padding: 5\n  },\n  complete: {\n    textDecorationLine: \"line-through\",\n    opacity: .25\n  },\n  required: {\n    fontWeight: \"bold\"\n  },\n  boss: {\n    //TODO\n    color: \"red\"\n  },\n  area: {\n    //TODO\n    color: \"blue\"\n  },\n  quest: {\n    //TODO\n    color: \"green\"\n  },\n  waypoint: {\n    //TODO\n    color: \"lightblue\"\n  },\n  trial: {\n    //TODO\n    color: \"teal\"\n  }\n});\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { AsyncStorage } from \"react-native\";\n\nexport const ProgressContext = createContext();\n\nconst initialState = {\n  completed: []\n}\n\nconst reducer = (state, id) => {\n  var newState\n  if (typeof id == \"object\") {\n    // We've been given an entirely new state (probably from an initial load)\n    // TODO This is a hack\n    return id\n  } else if (!state.completed.includes(id)) {\n    newState = {\n      completed: [...state.completed, id]\n    }\n  } else {\n    newState = {\n      completed: state.completed.filter(\n        (checkId) => checkId != id\n      )\n    }\n  }\n  storeData(newState)\n  return newState\n}\n\nconst storeData = async (progress) => {\n  try {\n    await AsyncStorage.setItem(\"PoELCProgress\",\n                               JSON.stringify(progress));\n  } catch (error) {\n    //TODO - error saving data\n    console.error(\"Saving error\");\n    console.error(error);\n  }\n}\n\nconst loadData = async () => {\n  try {\n    const value = await AsyncStorage.getItem(\"PoELCProgress\");\n    return value ? JSON.parse(value) : value\n  } catch (error) {\n    //TODO - error saving data\n    console.error(\"Loading error\");\n    console.error(error);\n  }\n}\n\nexport const ProgressContextProvider = (props) => {\n  const [progress, dispatch] = React.useReducer(reducer, initialState);\n\n  useEffect(() => {\n    loadData().then((loadedProgress) => {\nconsole.log(\"Loaded: \" )\nconsole.log(loadedProgress)\n      if (loadedProgress) {\n        dispatch(loadedProgress)\n      }\n    })},\n    [] /* Empty array = only run on mount */\n  );\n\n  return (\n    <ProgressContext.Provider value={[progress, dispatch]}>\n      {props.children}\n    </ProgressContext.Provider>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\n\n/**\n * Parses a fragment of an objective, replacing:\n *\n * - *Boss*  with boss-styled text\n * - _Area_  with area-styled text\n * - #Quest# with quest-styled text\n * - =Trial= with trial-styled text\n * - /WP/    with WP-styled text\n */\nfunction parseTextFragment(taskId, fragment, defaultStyle, index) {\n  fragment += \"\";\n\n  var fragments   = [];\n  var splitString = [];\n  var type        = \"\";\n  if (fragment.includes(\"*\")) {\n    splitString = fragment.split(\"*\");\n    type = \"boss\";\n  } else if (fragment.includes(\"_\")) {\n    splitString = fragment.split(\"_\");\n    type = \"area\";\n  } else if (fragment.includes(\"#\")) {\n    splitString = fragment.split(\"#\");\n    type = \"quest\";\n  } else if (fragment.includes(\"=\")) {\n    splitString = fragment.split(\"=\");\n    type = \"trial\";\n  } else if (fragment.includes(\"/\")) {\n    splitString = fragment.split(\"/\");\n    type = \"waypoint\";\n  }\n\n  if (typeof index === \"undefined\") {\n    index = {\"i\": 0};\n  }\n\n  var uniqueKey = taskId + \"Text\" + type + index.i;\n\n  if (type !== \"\") {\n    splitString.forEach(function (value, idx) {\n      index.i++;\n      if (idx % 2 == 0) {\n        fragments = fragments.concat(parseTextFragment(taskId,\n                                                       value,\n                                                       defaultStyle,\n                                                       index));\n      } else {\n        var newStyle = defaultStyle.concat([globalStyles[type]]);\n        uniqueKey += idx.toString();\n        fragments.push(<Text key={ uniqueKey }\n                             style={ newStyle }>{value}</Text>);\n      }\n    });\n  } else {\n    fragments.push(<Text key={ uniqueKey }\n                         style={ defaultStyle }>{fragment}</Text>);\n  }\n\n  return fragments;\n}\n\nexport default class FormattedText extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    var taskId = this.props.taskId;\n    var style = this.props.style;\n\n    var indexObj = {\"i\": 0};\n\n    var ret = [];\n\n    if (this.props.children) {\n      this.props.children.forEach(function(value, index) {\n        ret.push(\n          <Text key={\"FormattedTextWrapper\" + taskId + index}>\n            { parseTextFragment(taskId, value, style, indexObj)}\n          </Text>\n        );\n      });\n    }\n\n    return ret;\n  }\n}\n","import React, {useState} from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { Progress } from \"../data/progress.js\";\nimport FormattedText from \"../shared/formattedText.js\";\nimport {globalStyles} from \"../styles/global.js\";\n\nexport default class LevellingItem extends React.Component {\n\n  /**\n   * Only update a component if its completed state has changed.\n   */\n  shouldComponentUpdate(nextProps) {\n    return nextProps.complete != this.props.complete;\n  }\n\n  render() {\n    var item         = this.props.item;\n    var act          = this.props.act;\n    var complete     = this.props.complete;\n    var pressHandler = this.props.pressHandler;\n\n    var objectiveStyle = [];\n    var rewardStyle    = [globalStyles.infoItem];\n\n    if (complete) {\n      objectiveStyle.push(globalStyles.complete)\n      rewardStyle.push(globalStyles.complete);\n    }\n\n    if ( !item.optional ) {\n      objectiveStyle.push(globalStyles.required)\n    }\n\n    var objectiveLine = [];\n\n    var key = item.id;\n\n    objectiveLine.push(\n      <FormattedText key={key}\n                     taskId={item.id}\n                     style={objectiveStyle}>\n        {item.text}\n      </FormattedText>\n    );\n\n    var infoLine = [];\n    if (item.minLvl) {\n      infoLine.push(<Text key=\"{key}MinLvl\"\n                          style={rewardStyle}>Min lvl: {item.minLvl}</Text>);\n    }\n    if (item.direction) {\n      var direction = \"?\";\n\n      switch (item.direction) {\n        case \"N\":\n          direction = \"↑\";\n          break;\n\n        case \"NE\":\n          direction = \"↗\";\n          break;\n\n        case \"E\":\n          direction = \"→\";\n          break;\n\n        case \"SE\":\n          direction = \"↘\";\n          break;\n\n        case \"S\":\n          direction = \"↓\";\n          break;\n\n        case \"SW\":\n          direction = \"↙\";\n          break;\n\n        case \"W\":\n          direction = \"←\";\n          break;\n\n        case \"NW\":\n          direction = \"↖\";\n          break;\n      }\n      infoLine.push(<Text key=\"{item.id}Direction\"\n                          style={rewardStyle}>Go {direction}</Text>);\n    }\n    if (item.rewards) {\n      var reward = [];\n      if (item.rewards.passive) {\n        reward.push(<Text style={rewardStyle}\n                          key={item.id + \"PassiveReward\"} >+{item.rewards.passive.num}</Text>);\n      }\n      if (item.rewards.item) {\n        reward.push(<Text style={rewardStyle}\n                          key={item.id + \"ItemReward\"}>{item.rewards.item}</Text>);\n      }\n      infoLine.push(<Text key={item.id + \"GenericReward\"}\n                          style={rewardStyle}>Reward: {reward}</Text>);\n    }\n\n    return (\n      <View key={\"LevellingContainer\" + item.id}>\n        <TouchableOpacity key={\"Touchable\" + item.id}\n                          onPress={() => pressHandler(item.id)}>\n          <View key={\"ObjectiveContainer\" + item.id}\n                style={globalStyles.item}>\n            { objectiveLine }\n            <View key={\"RewardContainer\" + item.id}\n                  style={globalStyles.info}>\n              { infoLine }\n            </View>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, SafeAreaView, View, SectionList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport LevellingItem from '../shared/levellingItem.js';\n\nimport { ProgressContext } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Levelling({route}) {\n  const [progress, dispatch] = useContext(ProgressContext);\n\n  const renderItemFunc = function({item, section}) {\n    return <LevellingItem act={section.num}\n                          item={ item }\n                          pressHandler={ dispatch }\n                          complete={progress.completed.includes(item.id)} />\n  };\n\n  return (\n    <SafeAreaView style={globalStyles.section}>\n      <SectionList\n        sections={content.acts}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItemFunc}\n        extraData={progress.progress}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={globalStyles.sectionText}>{title}</Text>\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default class PassiveItem extends React.Component {\n\n  /**\n   * Only update a component if its completed state has changed.\n   */\n  shouldComponentUpdate(nextProps) {\n    console.log(\"Checking if \" + this.props.item.id + \" shoudl upate\");\n    return nextProps.complete != this.props.complete;\n  }\n\n  render() {\n    var item         = this.props.item;\n    var act          = this.props.act;\n    var complete     = this.props.complete;\n    var pressHandler = this.props.pressHandler;\n    var passive = item.rewards.passive;\n\n    var objectiveStyle = [globalStyles.required];\n    if ( complete ) {\n      objectiveStyle.push(globalStyles.complete)\n    }\n\n    var objectiveLine = [\n      <FormattedText key={item.id + \"PassiveQuestText\"}\n                     style={objectiveStyle}\n                     taskId={item.id + \"QText\"}>\n        {[\"Quest: \" + passive.quest]}\n      </FormattedText>,\n      <FormattedText key={item.id + \"PassiveWpText\"}\n                     style={objectiveStyle}\n                     taskId={item.id + \"WPText\"}>\n      {[\"WP: \" + passive.wp]}\n      </FormattedText>\n    ];\n\n    if (passive.text) {\n      objectiveLine.push(\n        <FormattedText key={item.id + \"PassiveText\"}\n                       style={objectiveStyle}\n                       taskId={item.id + \"Text\"}>\n          {passive.text}\n        </FormattedText>);\n    }\n\n    return (\n      <TouchableOpacity onPress={() => pressHandler(item.id)}>\n        <View style={globalStyles.item}>\n            { objectiveLine }\n        </View>\n      </TouchableOpacity>\n    )\n  }\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, SafeAreaView, View, SectionList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport PassiveItem from '../shared/passiveItem.js';\nimport { ProgressContext } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Passives() {\n  const [progress, dispatch] = useContext(ProgressContext);\n\n  const renderItemFunc = ({ item, section }) => (\n    <PassiveItem act={section.num}\n                 item={ item }\n                 pressHandler={ dispatch }\n                 complete={progress.completed.includes(item.id)} />\n  );\n\n  // Need to take a copy of the acts array else we end up modifying it and\n  // breaking all of the other sections\n  var passives = content.acts.map((act) => {\n    var o = Object.create(act);\n    o.data = o.data.filter((item) => {\n      return \"rewards\" in item && \"passive\" in item.rewards\n    });\n    return o;\n  });\n\n  return (\n    <SafeAreaView style={globalStyles.section}>\n      <SectionList\n        sections={passives}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItemFunc}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={globalStyles.sectionText}>{title}</Text>\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default class TrialItem extends React.Component {\n\n  /**\n   * Only update a component if its completed state has changed.\n   */\n  shouldComponentUpdate(nextProps) {\n    console.log(\"Checking if \" + this.props.item.id + \" shoudl upate\");\n    return nextProps.complete != this.props.complete;\n  }\n\n  render() {\n    var item         = this.props.item;\n    var act          = this.props.act;\n    var complete     = this.props.complete;\n    var pressHandler = this.props.pressHandler;\n    var trial        = item.rewards.trial;\n\n    var objectiveStyle = [globalStyles.required];\n    if ( complete ) {\n      objectiveStyle.push(globalStyles.complete)\n    }\n\n    var objectiveLine = [\n      <FormattedText key={item.id + \"objText\"}\n                     style={objectiveStyle}\n                     taskId={item.id + \"Obj\"}>\n        {[\"Trial: \" + trial.name]}\n      </FormattedText>,\n    ];\n\n    if (trial.wp) {\n      objectiveLine.push(\n        <FormattedText key={item.id + \"wpText\"}\n                       style={objectiveStyle}\n                       taskId={item.id + \"WP\"}>\n          {[\"WP: \" + trial.wp]}\n        </FormattedText>\n      );\n    }\n\n    if (trial.text) {\n      objectiveLine.push(\n        <FormattedText key={item.id + \"trialText\"}\n                       style={objectiveStyle}\n                       taskId={item.id + \"Text\"}>\n          {trial.text}\n        </FormattedText>);\n    }\n\n    return (\n      <View key={\"TrialContainer\" + item.id}>\n        <TouchableOpacity key={\"TouchableTrial\" + item.id}\n                          onPress={() => pressHandler(item.id)}>\n          <View key={\"TrialContainer\" + item.id }\n                style={globalStyles.item}>\n              { objectiveLine }\n          </View>\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, SafeAreaView, View, SectionList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport TrialItem from '../shared/trialItem.js';\nimport { ProgressContext } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Trials() {\n  const [progress, dispatch] = useContext(ProgressContext);\n\n  const renderItemFunc = ({ item, section }) => (\n    \"rewards\" in item && \"trial\" in item.rewards\n    ? <TrialItem act={section.num}\n                 item={ item }\n                 pressHandler={ dispatch }\n                 complete={progress.completed.includes(item.id)} />\n    : <Text></Text>\n  );\n\n  // Not every act has a trial, and it's ugly to include acts which don't\n  var trials = content.acts.filter(\n    (section) => {\n      return section.data.some((item) => {\n        return \"rewards\" in item && \"trial\" in item.rewards\n      })\n    });\n  trials = trials.concat(content.maps);\n\n  trials.forEach((trial) => {\n    trial.data = trial.data.filter((item) => {\n      return \"rewards\" in item && \"trial\" in item.rewards\n    })\n  })\n\n  return (\n    <SafeAreaView style={globalStyles.section}>\n      <SectionList\n        sections={trials}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItemFunc}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={globalStyles.sectionText}>{title}</Text>\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\n\n\nexport default function About() {\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        <Text style={globalStyles.headerText}>This is the about page</Text>\n        <Text style={globalStyles.headerText}>How lovely</Text>\n      </View>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nimport { globalStyles } from \"../styles/global.js\";\n\nexport default function Header( { navigation, title } ) {\n\n  const openMenu = () => {\n    navigation.openDrawer();\n  }\n\n  return (\n    <View style={globalStyles.header}>\n      <MaterialIcons style={globalStyles.headerMenuIcon}\n                     onPress={openMenu}\n                     name=\"menu\"/>\n      <Text style={globalStyles.headerText}>{title}</Text>\n    </View>\n  );\n}\n\n","import React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport Levelling from \"../screens/levelling\";\nimport Passives from \"../screens/passives\";\nimport Trials from \"../screens/trials\";\nimport About from \"../screens/about\";\n\n\nimport Header from \"../shared/header.js\";\n\nconst Stack = createStackNavigator()\n\nexport default function genericNavigator( { navigation, route } ) {\n  var component = null;\n\n  switch (route.name) {\n    case \"Levelling\":\n      component = Levelling;\n      break;\n    case \"Passives\":\n      component = Passives;\n      break;\n    case \"Trials\":\n      component = Trials;\n      break;\n    case \"About\":\n      component = About;\n      break;\n  }\n\n  return (\n    <Stack.Navigator initialRouteName={route.name}\n    screenOptions={{\n      headerStyle: {\n        backgroundColor: '#999',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    }}>\n      <Stack.Screen\n          name={route.name}\n          component={component}\n          options={{\n            headerTitle: () => <Header navigation={navigation}\n                                       title={route.name}/>,\n          }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport genericNavigator from './genericStack';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function drawerNavigator() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Levelling\">\n        <Drawer.Screen name=\"Levelling\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Passives\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Trials\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"About\"\n                       component={genericNavigator}/>\n      </Drawer.Navigator>\n    </NavigationContainer>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { globalStyles } from \"./styles/global.js\";\nimport DrawerNavigator from \"./routes/drawer.js\";\nimport { ProgressContextProvider } from \"./data/progress.js\";\n\nexport default function App() {\n  return(\n    <ProgressContextProvider>\n      <DrawerNavigator/>\n    </ProgressContextProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/PoELevellingCompanion/expo-service-worker.js', { scope: '/PoELevellingCompanion/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}