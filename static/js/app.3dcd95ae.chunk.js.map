{"version":3,"sources":["data/progress.js","styles/global.js","shared/formattedText.js","shared/levellingItem.js","screens/levelling.js","shared/passiveItem.js","screens/passives.js","shared/trialItem.js","screens/trials.js","screens/about.js","shared/header.js","routes/genericStack.js","routes/drawer.js","App.js","web-build/register-service-worker.js"],"names":["Progress","createContext","1","2","3","4","5","6","7","8","9","10","globalStyles","StyleSheet","create","container","padding","flex","backgroundColor","alignItems","justifyContent","header","width","height","flexDirection","headerText","fontSize","color","fontWeight","section","sectionText","textAlign","headerMenuIcon","position","left","item","marginTop","borderColor","borderWidth","borderStyle","borderRadius","objective","info","infoItem","complete","textDecorationLine","opacity","required","boss","area","quest","waypoint","trial","FormattedText","props","text","Array","isArray","this","children","join","Text","key","taskId","parseTextFragment","fragment","defaultStyle","index","fragments","splitString","type","includes","split","uniqueKey","i","forEach","value","idx","concat","newStyle","toString","push","style","React","Component","LevellingItem","state","act","pressHandler","objectiveStyle","rewardStyle","optional","objectiveLine","id","o","wp","hasWp","View","infoLine","minLvl","direction","rewards","reward","passive","num","TouchableOpacity","onPress","PureComponent","Levelling","useState","progress","setProgress","toggleState","prevState","SafeAreaView","SectionList","sections","content","acts","keyExtractor","renderItem","renderSectionHeader","title","PassiveItem","Passives","useContext","JSON","parse","stringify","FlatList","data","tasks","filter","task","TrialItem","name","Trials","About","Header","navigation","MaterialIcons","openDrawer","Stack","createStackNavigator","genericNavigator","route","component","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","options","headerTitle","Drawer","createDrawerNavigator","drawerNavigator","NavigationContainer","App","Provider","navigator","window","addEventListener","serviceWorker","register","scope","then","catch","error","console"],"mappings":"6JAEaA,EAAWC,wBACtB,CACE,KAAQ,CACNC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,MCZGC,E,KAAeC,EAAWC,OAAO,CAC5CC,UAAW,CACTC,QAAiB,GACjBC,KAAiB,EACjBC,gBAAiB,OACjBC,WAAiB,SACjBC,eAAiB,UAEnBC,OAAQ,CACNC,MAAQ,OACRC,OAAQ,OACRC,cAAe,MACfL,WAAY,SACZC,eAAgB,UAElBK,WAAY,CACVC,SAAY,GACZC,MAAY,OACZC,WAAY,QAEdC,QAAS,CACPb,QAAS,GACTM,MAAQ,OACRE,cAAe,MACfJ,eAAgB,UAElBU,YAAa,CACXJ,SAAY,GACZC,MAAY,OACZC,WAAY,OACZG,UAAW,UAEbC,eAAgB,CACdN,SAAU,GACVC,MAAU,OACVM,SAAU,WACVC,KAAU,GAEZC,KAAM,CACJnB,QAAQ,GACRoB,UAAW,GACXC,YAAa,OACbC,YAAa,EACbC,YAAa,SACbC,aAAc,IAEhBC,UAAW,CACTjB,cAAe,OAEjBkB,KAAM,CACJlB,cAAe,OAEjBmB,SAAU,CACR3B,QAAS,GAEX4B,SAAU,CACRC,mBAAoB,eACpBC,QAAS,KAEXC,SAAU,CACRnB,WAAY,QAEdoB,KAAM,CAEJrB,MAAO,OAETsB,KAAM,CAEJtB,MAAO,QAETuB,MAAO,CAELvB,MAAO,SAETwB,SAAU,CAERxB,MAAO,aAETyB,MAAO,CAELzB,MAAO,U,kkBChBU0B,E,gCACnB,WAAYC,GAAQ,+BACZA,G,6CAKN,IAAIC,EAAO,GAQX,OALEA,EADEC,MAAMC,QAAQC,KAAKJ,MAAMK,UACpBD,KAAKJ,MAAMK,SAASC,KAAK,IAEzBF,KAAKJ,MAAMK,SAIlB,kBAACE,EAAA,EAAD,CAAMC,IAAMJ,KAAKJ,MAAMS,QApE7B,SAASC,EAAkBD,EAAQE,EAAUC,EAAcC,GAGzD,IAAIC,EAAc,GACdC,EAAc,GACdC,EAAc,IAJlBL,GAAY,IAKCM,SAAS,MACpBF,EAAcJ,EAASO,MAAM,KAC7BF,EAAO,QACEL,EAASM,SAAS,MAC3BF,EAAcJ,EAASO,MAAM,KAC7BF,EAAO,QACEL,EAASM,SAAS,MAC3BF,EAAcJ,EAASO,MAAM,KAC7BF,EAAO,SACEL,EAASM,SAAS,MAC3BF,EAAcJ,EAASO,MAAM,KAC7BF,EAAO,SACEL,EAASM,SAAS,OAC3BF,EAAcJ,EAASO,MAAM,KAC7BF,EAAO,YAGY,qBAAVH,IACTA,EAAQ,CAAC,EAAK,IAGhB,IAAIM,EAAYV,EAAS,OAASO,EAAOH,EAAMO,EAsB/C,MApBa,KAATJ,EACFD,EAAYM,SAAQ,SAAUC,EAAOC,GAEnC,GADAV,EAAMO,IACFG,EAAM,GAAK,EACbT,EAAYA,EAAUU,OAAOd,EAAkBD,EACAa,EACAV,EACAC,QAC1C,CACL,IAAIY,EAAWb,EAAaY,OAAO,CAAClE,EAAa0D,KACjDG,GAAaI,EAAIG,WACjBZ,EAAUa,KAAK,kBAACpB,EAAA,EAAD,CAAMC,IAAMW,EACNS,MAAQH,GAAYH,QAI7CR,EAAUa,KAAK,kBAACpB,EAAA,EAAD,CAAMC,IAAMW,EACNS,MAAQhB,GAAgBD,IAGxCG,EAoBCJ,CAAkBN,KAAKJ,MAAMS,OACXR,EACAG,KAAKJ,MAAM4B,Y,GAnBIC,IAAMC,W,8aC3D5BC,E,gCAInB,WAAY/B,GAAQ,IAAD,sBACjB,cAAMA,IAHRgC,MAAQ,GAKN,EAAKA,MAAQ,CACX,KAAQhC,EAAMnB,KACd,IAAOmB,EAAMiC,IACb,SAAYjC,EAAMV,SAClB,aAAgBU,EAAMkC,cAPP,E,6CAYjB,IAAIrD,EAAWuB,KAAK4B,MAAMnD,KACtBoD,EAAW7B,KAAK4B,MAAMC,IACtB3C,EAAWc,KAAK4B,MAAM1C,SACtB4C,EAAe9B,KAAK4B,MAAME,aAE1BC,EAAiB,GACjBC,EAAiB,CAAC9E,EAAa+B,UAC9BC,IACH6C,EAAeR,KAAKrE,EAAagC,UACjC8C,EAAYT,KAAKrE,EAAagC,WAE1BT,EAAKwD,UACTF,EAAeR,KAAKrE,EAAamC,UAGnC,IAAI6C,EAAgB,GAEhB9B,EAAM3B,EAAK0D,GAEf,GAAIrC,MAAMC,QAAQtB,EAAKoB,MACrBpB,EAAKoB,KAAKoB,SAAQ,SAAUC,EAAOT,GACjCL,GAAOK,EAAMa,WACb,IAAIc,EAAK,kBAAC,EAAD,CAAehC,IAAKA,EACLC,OAAQ5B,EAAK0D,GACbX,MAAOO,GACnBb,GAEZgB,EAAcX,KAAKa,UAEhB,CACL,IAAIC,EAAK,GAEL5D,EAAK6D,QACPD,EAAK,WAGP,IAAID,EAAK,kBAAC,EAAD,CAAe/B,OAAQ5B,EAAK0D,GACbX,MAAOO,GACnBtD,EAAKoB,KAAOwC,GAGxBH,EAAcX,KAAK,kBAACgB,EAAA,EAAD,CAAMnC,IAAKA,EAAKoB,MAAOtE,EAAa6B,WAAaqD,IAGtE,IAAII,EAAW,GAKf,GAJI/D,EAAKgE,QACPD,EAASjB,KAAK,kBAACpB,EAAA,EAAD,CAAMC,IAAI,cACJoB,MAAOQ,GADb,YACoCvD,EAAKgE,SAErDhE,EAAKiE,UAAW,CAClB,IAAIA,EAAY,IAEhB,OAAQjE,EAAKiE,WACX,IAAK,IACHA,EAAY,SACZ,MAEF,IAAK,KACHA,EAAY,SACZ,MAEF,IAAK,IACHA,EAAY,SACZ,MAEF,IAAK,KACHA,EAAY,SACZ,MAEF,IAAK,IACHA,EAAY,SACZ,MAEF,IAAK,KACHA,EAAY,SACZ,MAEF,IAAK,IACHA,EAAY,SACZ,MAEF,IAAK,KACHA,EAAY,SAGhBF,EAASjB,KAAK,kBAACpB,EAAA,EAAD,CAAMC,IAAI,qBACJoB,MAAOQ,GADb,MAC8BU,IAE9C,GAAIjE,EAAKkE,QAAS,CAChB,IAAIC,EAAS,GACTnE,EAAKkE,QAAQE,SACfD,EAAOrB,KAAK,kBAACpB,EAAA,EAAD,CAAMqB,MAAOQ,EACP5B,IAAK3B,EAAK0D,GAAK,iBADrB,IACyC1D,EAAKkE,QAAQE,QAAQC,MAExErE,EAAKkE,QAAQlE,MACfmE,EAAOrB,KAAK,kBAACpB,EAAA,EAAD,CAAMqB,MAAOQ,EACP5B,IAAK3B,EAAK0D,GAAK,cAAe1D,EAAKkE,QAAQlE,OAE/D+D,EAASjB,KAAK,kBAACpB,EAAA,EAAD,CAAMC,IAAK3B,EAAK0D,GAAK,gBACfX,MAAOQ,GADb,WACmCY,IAGnD,OACE,kBAACL,EAAA,EAAD,CAAMnC,IAAK,qBAAuB3B,EAAK0D,IACrC,kBAACY,EAAA,EAAD,CAAkB3C,IAAK,YAAc3B,EAAK0D,GACxBa,QAAS,kBAAMlB,EAAaD,EAAKpD,EAAK0D,MACtD,kBAACI,EAAA,EAAD,CAAMnC,IAAK,qBAAuB3B,EAAK0D,GACjCX,MAAOtE,EAAauB,MACtByD,EACF,kBAACK,EAAA,EAAD,CAAMnC,IAAK,kBAAoB3B,EAAK0D,GAC9BX,MAAOtE,EAAa8B,MACtBwD,U,GA/H2Bf,IAAMwB,e,QCGlC,SAASC,IAAa,IAAD,EAEFC,mBAChC,CACE,KAAQ,CACN3G,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,EAAG,GACHC,GAAI,MAd0B,WAE3BmG,EAF2B,KAEjBC,EAFiB,KAmB5BC,EAAc,SAASzB,EAAKM,GAChCkB,GAAY,SAACE,GAUX,OAAOA,MAWX,OACE,kBAACC,EAAA,EAAD,CAAchC,MAAOtE,EAAaiB,SAChC,kBAACsF,EAAA,EAAD,CACEC,SAAUC,EAAQC,KAClBC,aAAc,SAACpF,GAAD,OAAUA,EAAK0D,IAC7B2B,WAZiB,SAAC,GAAD,IAAGrF,EAAH,EAAGA,KAAMN,EAAT,EAASA,QAAT,OACrB,kBAAC,EAAD,CAAe0D,IAAK1D,EAAQ2E,IACbrE,KAAOA,EACPqD,aAAewB,EACfpE,YAAaT,EAAK0D,MAAMiB,MASnCW,oBAAqB,gBAAcC,EAAd,EAAG7F,QAAW6F,MAAd,OACnB,kBAAC7D,EAAA,EAAD,CAAMqB,MAAOtE,EAAakB,aAAc4F,O,aCpDnC,SAASC,EAAT,GAAsD,IAAhCxF,EAA+B,EAA/BA,KAAM2E,EAAyB,EAAzBA,SAAUtB,EAAe,EAAfA,aAC/Ce,EAAUpE,EAAKkE,QAAQE,QAEvBd,EAAiB,CAAC7E,EAAamC,UAC9BZ,EAAK0D,MAAMiB,GACdrB,EAAeR,KAAKrE,EAAagC,UAGnC,IAAIgD,EAAgB,CAClB,kBAAC,EAAD,CAAeV,MAAOO,EACP1B,OAAQ5B,EAAK0D,IAD5B,UAEUU,EAAQrD,OAElB,kBAAC,EAAD,CAAegC,MAAOO,EACP1B,OAAQ5B,EAAK0D,IAD5B,OAEOU,EAAQR,KAIbQ,EAAQhD,OACNC,MAAMC,QAAQ8C,EAAQhD,MACxBgD,EAAQhD,KAAKoB,SAAQ,SAAUC,EAAOT,GAC7BA,EAAMa,WACb,IAAIc,EAAK,kBAAC,EAAD,CAAe/B,OAAQwC,EAAQV,GAChBX,MAAOO,GACnBb,GAEZgB,EAAcX,KAAKa,MAGrBF,EAAcX,KACZ,kBAAC,EAAD,CAAeC,MAAOO,EACP1B,OAAQ5B,EAAK0D,IACzBU,EAAQhD,QAKPpB,EAAK0D,GAEf,OACE,kBAACY,EAAA,EAAD,CAAkBC,QAAS,kBAAMlB,EAAarD,EAAK0D,MACjD,kBAACI,EAAA,EAAD,CAAMf,MAAOtE,EAAauB,MACxB,kBAAC8D,EAAA,EAAD,KACIL,KCzCG,SAASgC,IAYtB,IAZkC,IAAD,EAEDC,qBAAW7H,GAFV,WAE1B8G,EAF0B,KAEhBC,EAFgB,KAI3BC,EAAc,SAASnB,GAC3BkB,GAAY,SAACE,GAEX,OADAA,EAAUpB,IAAM,EACTiC,KAAKC,MAAMD,KAAKE,UAAUf,QAIjClG,EAAY,GACP2D,EAAI,EAAGA,EAAI,GAAIA,IACtB3D,EAAUkE,KACR,kBAACgB,EAAA,EAAD,CAAMf,MAAOtE,EAAaiB,SACxB,kBAACgC,EAAA,EAAD,CAAMqB,MAAOtE,EAAakB,aACvBuF,EAAQC,KAAK5C,GAAGgD,SAIvB3G,EAAUkE,KACR,kBAACgD,EAAA,EAAD,CACEC,KAAMb,EAAQC,KAAK5C,GAAGyD,MAAMC,QAC1B,SAAAC,GAAI,MAAI,YAAaA,GAAQ,YAAaA,EAAKhC,WACjDmB,WAAY,gBAAGrF,EAAH,EAAGA,KAAH,EAASgC,MAAT,OACV,kBAACwD,EAAD,CAAaxF,KAAOA,EACP2E,SAAWA,EACXtB,aAAewB,QAMpC,OACE,kBAACf,EAAA,EAAD,CAAMf,MAAOtE,EAAaS,QACxB,kBAAC4E,EAAA,EAAD,KACGlF,ICvCM,SAASuH,EAAT,GAAoD,IAAhCnG,EAA+B,EAA/BA,KAAM2E,EAAyB,EAAzBA,SAAUtB,EAAe,EAAfA,aAC7CpC,EAAQjB,EAAKkE,QAAQjD,MAErBqC,EAAiB,CAAC7E,EAAamC,UAC9BZ,EAAK0D,MAAMiB,GACdrB,EAAeR,KAAKrE,EAAagC,UAGnC,IAAIgD,EAAgB,CAClB,kBAAC,EAAD,CAAeV,MAAOO,EACP1B,OAAQ5B,EAAK0D,IAD5B,UAEUzC,EAAMmF,OA+BlB,OA3BInF,EAAM2C,IACRH,EAAcX,KACZ,kBAAC,EAAD,CAAeC,MAAOO,EACT1B,OAAQ5B,EAAK0D,IAD1B,OAEOzC,EAAM2C,KAKb3C,EAAMG,OACJC,MAAMC,QAAQL,EAAMG,MACtBH,EAAMG,KAAKoB,SAAQ,SAAUC,EAAOT,GAClC,IAAI2B,EAAK,kBAAC,EAAD,CAAe/B,OAAQX,EAAMyC,GACdX,MAAOO,GACnBb,GAEZgB,EAAcX,KAAKa,MAGrBF,EAAcX,KACZ,kBAAC,EAAD,CAAeC,MAAOO,EACP1B,OAAQ5B,EAAK0D,IACzBzC,EAAMG,QAMb,kBAACkD,EAAA,EAAD,CAAkBC,QAAS,kBAAMlB,EAAarD,EAAK0D,MACjD,kBAACI,EAAA,EAAD,CAAMf,MAAOtE,EAAauB,MACxB,kBAAC8D,EAAA,EAAD,KACIL,KC3CG,SAAS4C,IAYtB,IAZgC,IAAD,EAECX,qBAAW7H,GAFZ,WAExB8G,EAFwB,KAEdC,EAFc,KAIzBC,EAAc,SAASnB,GAC3BkB,GAAY,SAACE,GAEX,OADAA,EAAUpB,IAAM,EACTiC,KAAKC,MAAMD,KAAKE,UAAUf,QAIjClG,EAAY,GACP2D,EAAI,EAAGA,EAAI,GAAIA,IACtB3D,EAAUkE,KACR,kBAACgB,EAAA,EAAD,CAAMf,MAAOtE,EAAaiB,SACxB,kBAACgC,EAAA,EAAD,CAAMqB,MAAOtE,EAAakB,aACvBuF,EAAQC,KAAK5C,GAAGgD,SAKvB3G,EAAUkE,KACR,kBAACgD,EAAA,EAAD,CACEC,KAAMb,EAAQC,KAAK5C,GAAGyD,MAAMC,QAC1B,SAAAC,GAAI,MAAI,YAAaA,GAAQ,UAAWA,EAAKhC,WAC/CmB,WAAY,gBAAGrF,EAAH,EAAGA,KAAH,EAASgC,MAAT,OACV,kBAACmE,EAAD,CAAWnG,KAAOA,EACP2E,SAAWA,EACXtB,aAAewB,QA2BlC,OApBAjG,EAAUkE,KACR,kBAACgB,EAAA,EAAD,CAAMf,MAAOtE,EAAaiB,SACxB,kBAACgC,EAAA,EAAD,CAAMqB,MAAOtE,EAAakB,aACvBuF,EAAQC,KAAR,KAAqBI,SAK5B3G,EAAUkE,KACR,kBAACgD,EAAA,EAAD,CACEC,KAAMb,EAAQC,KAAR,KAAqBa,MAAMC,QAC/B,SAAAC,GAAI,MAAI,YAAaA,GAAQ,UAAWA,EAAKhC,WAC/CmB,WAAY,gBAAGrF,EAAH,EAAGA,KAAH,EAASgC,MAAT,OACV,kBAACmE,EAAD,CAAWnG,KAAOA,EACP2E,SAAWA,EACXtB,aAAewB,QAM9B,kBAACf,EAAA,EAAD,CAAMf,MAAOtE,EAAaS,QACxB,kBAAC4E,EAAA,EAAD,KACGlF,IC7DM,SAAS0H,IACtB,OACE,kBAACxC,EAAA,EAAD,CAAMf,MAAOtE,EAAaS,QACxB,kBAAC4E,EAAA,EAAD,KACE,kBAACpC,EAAA,EAAD,CAAMqB,MAAOtE,EAAaa,YAA1B,0BACA,kBAACoC,EAAA,EAAD,CAAMqB,MAAOtE,EAAaa,YAA1B,gB,aCLO,SAASiH,EAAT,GAA0C,IAAvBC,EAAsB,EAAtBA,WAAYjB,EAAU,EAAVA,MAM5C,OACE,kBAACzB,EAAA,EAAD,CAAMf,MAAOtE,EAAaS,QACxB,kBAACuH,EAAA,EAAD,CAAe1D,MAAOtE,EAAaoB,eACpB0E,QAPF,WACfiC,EAAWE,cAOMN,KAAK,SACpB,kBAAC1E,EAAA,EAAD,CAAMqB,MAAOtE,EAAaa,YAAaiG,ICN7C,IAAMoB,EAAQC,cAEC,SAASC,EAAT,GAAoD,IAAvBL,EAAsB,EAAtBA,WAAYM,EAAU,EAAVA,MAClDC,EAAY,KAEhB,OAAQD,EAAMV,MACZ,IAAK,YACHW,EAAYtC,EACZ,MACF,IAAK,WACHsC,EAAYtB,EACZ,MACF,IAAK,SACHsB,EAAYV,EACZ,MACF,IAAK,QACHU,EAAYT,EAIhB,OACE,kBAACK,EAAMK,UAAP,CAAiBC,iBAAkBH,EAAMV,KACzCc,cAAe,CACbC,YAAa,CACXpI,gBAAiB,QAEnBqI,gBAAiB,OACjBC,iBAAkB,CAChB5H,WAAY,UAId,kBAACkH,EAAMW,OAAP,CACIlB,KAAMU,EAAMV,KACZW,UAAWA,EACXQ,QAAS,CACPC,YAAa,kBAAM,kBAACjB,EAAD,CAAQC,WAAYA,EACZjB,MAAOuB,EAAMV,YC1CpD,IAAMqB,EAASC,cAEA,SAASC,IACtB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACH,EAAOT,UAAR,CAAkBC,iBAAiB,aACjC,kBAACQ,EAAOH,OAAR,CAAelB,KAAK,YACLW,UAAWF,IAC1B,kBAACY,EAAOH,OAAR,CAAelB,KAAK,WACLW,UAAWF,IAC1B,kBAACY,EAAOH,OAAR,CAAelB,KAAK,SACLW,UAAWF,IAC1B,kBAACY,EAAOH,OAAR,CAAelB,KAAK,QACLW,UAAWF,MCZnB,SAASgB,IAAO,IAAD,EACInD,mBAC9B,CACE,WAAc,EACd,KAAQ,CACN3G,EAAG,GAEHC,EAAG,GAEHC,EAAG,GAEHC,EAAG,GAEHC,EAAG,GAEHC,EAAG,GAEHC,EAAG,GAEHC,EAAG,GAEHC,EAAG,GAEHC,GAAI,MAvBkB,WACrBmG,EADqB,KACXC,EADW,KA6B5B,OACE,kBAAC/G,EAASiK,SAAV,CAAmBrF,MAAO,CAACkC,EAAUC,IACnC,kBAAC,EAAD,S,+DCpCF,kBAAmBmD,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,gDAAiD,CAAEC,MAAO,4BACnEC,MAAK,SAAS9H,OAGd+H,OAAM,SAASC,GACdC,QAAQjI,KAAK,oCAAqCgI,U","file":"static/js/app.3dcd95ae.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const Progress = createContext(\n  {\n    \"acts\": {\n      1: {},\n      2: {},\n      3: {},\n      4: {},\n      5: {},\n      6: {},\n      7: {},\n      8: {},\n      9: {},\n      10: {}\n    }\n  }\n);\n","import { StyleSheet } from \"react-native\";\n\nexport const globalStyles = StyleSheet.create({\n  container: {\n    padding:         20,\n    flex:            1,\n    backgroundColor: '#fff',\n    alignItems:      'center',\n    justifyContent:  'center',\n  },\n  header: {\n    width:  \"100%\",\n    height: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  headerText: {\n    fontSize:   18,\n    color:      \"#333\",\n    fontWeight: \"bold\"\n  },\n  section: {\n    padding: 10,\n    width:  \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  sectionText: {\n    fontSize:   18,\n    color:      \"#333\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  headerMenuIcon: {\n    fontSize: 28,\n    color:    \"#333\",\n    position: \"absolute\",\n    left:     0\n  },\n  item: {\n    padding:10,\n    marginTop: 10,\n    borderColor: \"#bbb\",\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    borderRadius: 10\n  },\n  objective: {\n    flexDirection: \"row\"\n  },\n  info: {\n    flexDirection: \"row\"\n  },\n  infoItem: {\n    padding: 5\n  },\n  complete: {\n    textDecorationLine: \"line-through\",\n    opacity: .25\n  },\n  required: {\n    fontWeight: \"bold\"\n  },\n  boss: {\n    //TODO\n    color: \"red\"\n  },\n  area: {\n    //TODO\n    color: \"blue\"\n  },\n  quest: {\n    //TODO\n    color: \"green\"\n  },\n  waypoint: {\n    //TODO\n    color: \"lightblue\"\n  },\n  trial: {\n    //TODO\n    color: \"teal\"\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\n\n/**\n * Parses a fragment of an objective, replacing:\n *\n * - *Boss*  with boss-styled text\n * - _Area_  with area-styled text\n * - #Quest# with quest-styled text\n * - =Trial= with trial-styled text\n * - /WP/    with WP-styled text\n */\nfunction parseTextFragment(taskId, fragment, defaultStyle, index) {\n  fragment += \"\";\n\n  var fragments   = [];\n  var splitString = [];\n  var type        = \"\";\n  if (fragment.includes(\"*\")) {\n    splitString = fragment.split(\"*\");\n    type = \"boss\";\n  } else if (fragment.includes(\"_\")) {\n    splitString = fragment.split(\"_\");\n    type = \"area\";\n  } else if (fragment.includes(\"#\")) {\n    splitString = fragment.split(\"#\");\n    type = \"quest\";\n  } else if (fragment.includes(\"=\")) {\n    splitString = fragment.split(\"=\");\n    type = \"trial\";\n  } else if (fragment.includes(\"/\")) {\n    splitString = fragment.split(\"/\");\n    type = \"waypoint\";\n  }\n\n  if (typeof index === \"undefined\") {\n    index = {\"i\": 0};\n  }\n\n  var uniqueKey = taskId + \"Text\" + type + index.i;\n\n  if (type !== \"\") {\n    splitString.forEach(function (value, idx) {\n      index.i++;\n      if (idx % 2 == 0) {\n        fragments = fragments.concat(parseTextFragment(taskId,\n                                                       value,\n                                                       defaultStyle,\n                                                       index));\n      } else {\n        var newStyle = defaultStyle.concat([globalStyles[type]]);\n        uniqueKey += idx.toString();\n        fragments.push(<Text key={ uniqueKey }\n                             style={ newStyle }>{value}</Text>);\n      }\n    });\n  } else {\n    fragments.push(<Text key={ uniqueKey }\n                         style={ defaultStyle }>{fragment}</Text>);\n  }\n\n  return fragments;\n}\n\nexport default class FormattedText extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    var text = \"\";\n\n    if (Array.isArray(this.props.children)) {\n      text = this.props.children.join(\"\");\n    } else {\n      text = this.props.children;\n    }\n\n    return (\n      <Text key={ this.props.taskId }>\n        { parseTextFragment(this.props.taskId,\n                            text,\n                            this.props.style) }\n      </Text>);\n  }\n}\n","import React, {useState} from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { Progress } from \"../data/progress.js\";\nimport FormattedText from \"../shared/formattedText.js\";\nimport {globalStyles} from \"../styles/global.js\";\n\nexport default class LevellingItem extends React.PureComponent {\n\n  state = {};\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      \"item\": props.item,\n      \"act\": props.act,\n      \"complete\": props.complete,\n      \"pressHandler\": props.pressHandler\n    };\n  }\n\n  render() {\n    var item     = this.state.item;\n    var act      = this.state.act;\n    var complete = this.state.complete;\n    var pressHandler = this.state.pressHandler;\n\n    var objectiveStyle = [];\n    var rewardStyle    = [globalStyles.infoItem];\n    if ( complete ) {\n      objectiveStyle.push(globalStyles.complete)\n      rewardStyle.push(globalStyles.complete);\n    }\n    if ( !item.optional ) {\n      objectiveStyle.push(globalStyles.required)\n    }\n\n    var objectiveLine = [];\n\n    var key = item.id;\n\n    if (Array.isArray(item.text)) {\n      item.text.forEach(function (value, index) {\n        key += index.toString();\n        var o = (<FormattedText key={key}\n                                taskId={item.id}\n                                style={objectiveStyle}>\n                   {value}\n                 </FormattedText>);\n        objectiveLine.push(o);\n      });\n    } else {\n      var wp = \"\";\n\n      if (item.hasWp) {\n        wp = \" /[WP]/\";\n      }\n\n      var o = (<FormattedText taskId={item.id}\n                              style={objectiveStyle}>\n                 {item.text + wp}\n               </FormattedText>);\n\n      objectiveLine.push(<View key={key} style={globalStyles.objective}>{ o }</View>);\n    }\n\n    var infoLine = [];\n    if (item.minLvl) {\n      infoLine.push(<Text key=\"{key}MinLvl\"\n                          style={rewardStyle}>Min lvl: {item.minLvl}</Text>);\n    }\n    if (item.direction) {\n      var direction = \"?\";\n\n      switch (item.direction) {\n        case \"N\":\n          direction = \"↑\";\n          break;\n\n        case \"NE\":\n          direction = \"↗\";\n          break;\n\n        case \"E\":\n          direction = \"→\";\n          break;\n\n        case \"SE\":\n          direction = \"↘\";\n          break;\n\n        case \"S\":\n          direction = \"↓\";\n          break;\n\n        case \"SW\":\n          direction = \"↙\";\n          break;\n\n        case \"W\":\n          direction = \"←\";\n          break;\n\n        case \"NW\":\n          direction = \"↖\";\n          break;\n      }\n      infoLine.push(<Text key=\"{item.id}Direction\"\n                          style={rewardStyle}>Go {direction}</Text>);\n    }\n    if (item.rewards) {\n      var reward = [];\n      if (item.rewards.passive) {\n        reward.push(<Text style={rewardStyle}\n                          key={item.id + \"PassiveReward\"} >+{item.rewards.passive.num}</Text>);\n      }\n      if (item.rewards.item) {\n        reward.push(<Text style={rewardStyle}\n                          key={item.id + \"ItemReward\"}>{item.rewards.item}</Text>);\n      }\n      infoLine.push(<Text key={item.id + \"GenericReward\"}\n                          style={rewardStyle}>Reward: {reward}</Text>);\n    }\n\n    return (\n      <View key={\"LevellingContainer\" + item.id}>\n        <TouchableOpacity key={\"Touchable\" + item.id}\n                          onPress={() => pressHandler(act, item.id)}>\n          <View key={\"ObjectiveContainer\" + item.id}\n                style={globalStyles.item}>\n            { objectiveLine }\n            <View key={\"RewardContainer\" + item.id}\n                  style={globalStyles.info}>\n              { infoLine }\n            </View>\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n","import React, {useState} from 'react';\nimport { StyleSheet, Text, SafeAreaView, View, SectionList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport LevellingItem from '../shared/levellingItem.js';\n\nimport { Progress } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Levelling() {\n\n  const [progress, setProgress] = useState(\n  {\n    \"acts\": {\n      1: {},\n      2: {},\n      3: {},\n      4: {},\n      5: {},\n      6: {},\n      7: {},\n      8: {},\n      9: {},\n      10: {}\n    }\n  }\n);\n\n  const toggleState = function(act, id) {\n    setProgress((prevState) => {\n//      const newState = Object.assign({}, prevState.acts[act]);\n//      if (id in newState) {\n//console.log(\"Deleting\");\n//        delete newState[id];\n//      } else {\n//console.log(\"Adding\");\n//        newState[id] = true;\n//      }\n//      prevState.acts[act] = newState\n      return prevState;\n    });\n  }\n\n  const renderItemFunc = ({ item, section }) => (\n    <LevellingItem act={section.num}\n                   item={ item }\n                   pressHandler={ toggleState }\n                   complete={!!(item.id in progress)} />\n    );\n\n  return (\n    <SafeAreaView style={globalStyles.section}>\n      <SectionList\n        sections={content.acts}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItemFunc}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={globalStyles.sectionText}>{title}</Text>\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default function PassiveItem({item, progress, pressHandler}) {\n  var passive = item.rewards.passive;\n\n  var objectiveStyle = [globalStyles.required];\n  if ( item.id in progress ) {\n    objectiveStyle.push(globalStyles.complete)\n  }\n\n  var objectiveLine = [\n    <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n      Quest: {passive.quest}\n    </FormattedText>,\n    <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n      WP: {passive.wp}\n    </FormattedText>\n  ];\n\n  if (passive.text) {\n    if (Array.isArray(passive.text)) {\n      passive.text.forEach(function (value, index) {\n        key += index.toString();\n        var o = (<FormattedText taskId={passive.id}\n                                style={objectiveStyle}>\n                   {value}\n                 </FormattedText>);\n        objectiveLine.push(o);\n      });\n    } else {\n      objectiveLine.push(\n        <FormattedText style={objectiveStyle}\n                       taskId={item.id}>\n          {passive.text}\n        </FormattedText>);\n    }\n  }\n\n  var key = item.id;\n\n  return (\n    <TouchableOpacity onPress={() => pressHandler(item.id)}>\n      <View style={globalStyles.item}>\n        <View>\n          { objectiveLine }\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, View, FlatList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport PassiveItem from '../shared/passiveItem.js';\nimport { Progress } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Passives() {\n\n  const [progress, setProgress] = useContext(Progress);\n\n  const toggleState = function(id) {\n    setProgress((prevState) => {\n      prevState[id] = true;\n      return JSON.parse(JSON.stringify(prevState));\n    });\n  }\n\n  var container = [];\n  for (var i = 1; i < 11; i++) {\n    container.push(\n      <View style={globalStyles.section}>\n        <Text style={globalStyles.sectionText}>\n          {content.acts[i].title}\n        </Text>\n      </View>\n    );\n    container.push(\n      <FlatList\n        data={content.acts[i].tasks.filter(\n          task => \"rewards\" in task && \"passive\" in task.rewards)}\n        renderItem={({ item, index }) => (\n          <PassiveItem item={ item }\n                       progress={ progress }\n                       pressHandler={ toggleState }/>\n        )}\n      />\n    );\n  }\n\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        {container}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default function TrialItem({item, progress, pressHandler}) {\n  var trial = item.rewards.trial;\n\n  var objectiveStyle = [globalStyles.required];\n  if ( item.id in progress ) {\n    objectiveStyle.push(globalStyles.complete)\n  }\n\n  var objectiveLine = [\n    <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n      Trial: {trial.name}\n    </FormattedText>,\n  ];\n\n  if (trial.wp) {\n    objectiveLine.push(\n      <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n        WP: {trial.wp}\n      </FormattedText>\n    );\n  }\n\n  if (trial.text) {\n    if (Array.isArray(trial.text)) {\n      trial.text.forEach(function (value, index) {\n        var o = (<FormattedText taskId={trial.id}\n                                style={objectiveStyle}>\n                   {value}\n                 </FormattedText>);\n        objectiveLine.push(o);\n      });\n    } else {\n      objectiveLine.push(\n        <FormattedText style={objectiveStyle}\n                       taskId={item.id}>\n          {trial.text}\n        </FormattedText>);\n    }\n  }\n\n  return (\n    <TouchableOpacity onPress={() => pressHandler(item.id)}>\n      <View style={globalStyles.item}>\n        <View>\n          { objectiveLine }\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, View, FlatList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport TrialItem from '../shared/trialItem.js';\nimport { Progress } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Trials() {\n\n  const [progress, setProgress] = useContext(Progress);\n\n  const toggleState = function(id) {\n    setProgress((prevState) => {\n      prevState[id] = true;\n      return JSON.parse(JSON.stringify(prevState));\n    });\n  }\n\n  var container = [];\n  for (var i = 1; i < 11; i++) {\n    container.push(\n      <View style={globalStyles.section}>\n        <Text style={globalStyles.sectionText}>\n          {content.acts[i].title}\n        </Text>\n      </View>\n    );\n\n    container.push(\n      <FlatList\n        data={content.acts[i].tasks.filter(\n          task => \"rewards\" in task && \"trial\" in task.rewards)}\n        renderItem={({ item, index }) => (\n          <TrialItem item={ item }\n                     progress={ progress }\n                     pressHandler={ toggleState }/>\n        )}\n      />\n    );\n  }\n\n  // Trials are special. They exist in maps too\n  container.push(\n    <View style={globalStyles.section}>\n      <Text style={globalStyles.sectionText}>\n        {content.acts[\"maps\"].title}\n      </Text>\n    </View>\n  );\n\n  container.push(\n    <FlatList\n      data={content.acts[\"maps\"].tasks.filter(\n        task => \"rewards\" in task && \"trial\" in task.rewards)}\n      renderItem={({ item, index }) => (\n        <TrialItem item={ item }\n                   progress={ progress }\n                   pressHandler={ toggleState }/>\n      )}\n    />\n  );\n\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        {container}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\n\n\nexport default function About() {\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        <Text style={globalStyles.headerText}>This is the about page</Text>\n        <Text style={globalStyles.headerText}>How lovely</Text>\n      </View>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nimport { globalStyles } from \"../styles/global.js\";\n\nexport default function Header( { navigation, title } ) {\n\n  const openMenu = () => {\n    navigation.openDrawer();\n  }\n\n  return (\n    <View style={globalStyles.header}>\n      <MaterialIcons style={globalStyles.headerMenuIcon}\n                     onPress={openMenu}\n                     name=\"menu\"/>\n      <Text style={globalStyles.headerText}>{title}</Text>\n    </View>\n  );\n}\n\n","import React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport Levelling from \"../screens/levelling\";\nimport Passives from \"../screens/passives\";\nimport Trials from \"../screens/trials\";\nimport About from \"../screens/about\";\n\n\nimport Header from \"../shared/header.js\";\n\nconst Stack = createStackNavigator()\n\nexport default function genericNavigator( { navigation, route } ) {\n  var component = null;\n\n  switch (route.name) {\n    case \"Levelling\":\n      component = Levelling;\n      break;\n    case \"Passives\":\n      component = Passives;\n      break;\n    case \"Trials\":\n      component = Trials;\n      break;\n    case \"About\":\n      component = About;\n      break;\n  }\n\n  return (\n    <Stack.Navigator initialRouteName={route.name}\n    screenOptions={{\n      headerStyle: {\n        backgroundColor: '#999',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    }}\n    >\n      <Stack.Screen\n          name={route.name}\n          component={component}\n          options={{\n            headerTitle: () => <Header navigation={navigation}\n                                       title={route.name}/>,\n          }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport genericNavigator from './genericStack';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function drawerNavigator() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Levelling\">\n        <Drawer.Screen name=\"Levelling\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Passives\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Trials\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"About\"\n                       component={genericNavigator} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { Progress } from './data/progress.js';\nimport { globalStyles } from \"./styles/global.js\";\nimport DrawerNavigator from \"./routes/drawer.js\";\n\nexport default function App() {\n  const [progress, setProgress] = useState(\n    {\n      \"currentAct\": 1,\n      \"acts\": {\n        1: {\n        },\n        2: {\n        },\n        3: {\n        },\n        4: {\n        },\n        5: {\n        },\n        6: {\n        },\n        7: {\n        },\n        8: {\n        },\n        9: {\n        },\n        10: {\n        }\n      }\n    },\n  );\n\n  return(\n    <Progress.Provider value={[progress, setProgress]}>\n      <DrawerNavigator />\n    </Progress.Provider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/PoELevellingCompanion/expo-service-worker.js', { scope: '/PoELevellingCompanion/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}