{"version":3,"sources":["styles/global.js","data/progress.js","shared/formattedText.js","shared/stackedLabel.js","shared/levellingItem.js","screens/levelling.js","shared/passiveItem.js","screens/passives.js","shared/trialItem.js","screens/trials.js","assets/images.js","screens/about.js","screens/settings.js","shared/header.js","routes/genericStack.js","routes/drawer.js","App.js","web-build/register-service-worker.js","assets/how-to.png"],"names":["Theme","localStorage","getItem","setAndStoreTheme","value","setItem","Colours","light","colors","primary","background","border","card","navHeader","headerStyle","backgroundColor","headerTintColor","headerTitleStyle","fontWeight","backgroundedLabelText","borderColour","requiredLabel","bossColour","areaColour","questColour","wpColour","trialColour","dark","text","amoled","globalStyles","StyleSheet","create","genericPage","minHeight","paddingTop","paddingBottom","alignItems","minimalContainer","flex","borderlessContainer","flexDirection","container","borderBottomWidth","borderColor","stackedContainer","paddingLeft","imageContainer","width","bottomContainer","justifyContent","marginBottom","textLink","color","label","display","labelContainer","labelContainerLeft","marginLeft","labelContainerRight","marginRight","labelText","fontSize","textAlign","waypointActiveContainer","waypointInactiveContainer","requiredContainer","optionalContainer","optionalLabelContainer","waypointLabelActive","waypointLabelInactive","centerBlock","header","height","headerText","section","padding","sectionText","headerMenuIcon","position","left","info","infoItem","complete","opacity","required","boss","area","quest","waypoint","trial","ProgressContext","createContext","initialState","JSON","parse","completed","reducer","state","id","newState","includes","filter","checkId","storeData","progress","a","async","AsyncStorage","stringify","console","error","ProgressContextProvider","props","React","useReducer","dispatch","Provider","children","FormattedText","taskId","this","style","indexObj","ret","forEach","index","push","Text","key","parseTextFragment","fragment","defaultStyle","fragments","splitString","type","split","uniqueKey","i","idx","concat","newStyle","toString","Component","HalfHeightLabel","lhs","containerStyle","textStyle","View","LeftLabel","item","minLvl","hasWp","RightLabel","optional","directionArrow","LevellingItem","act","objectiveStyle","rewardStyle","objectiveLine","infoLine","direction","rewards","reward","passive","num","itemStyle","TouchableOpacity","onPress","pressHandler","PureComponent","Levelling","route","useContext","SafeAreaView","SectionList","sections","content","acts","keyExtractor","renderItem","extraData","renderSectionHeader","title","PassiveItem","nextProps","wp","Passives","passives","map","o","Object","data","TrialItem","name","Trials","trials","length","maps","images","usage","require","About","Image","source","resizeMode","Linking","openURL","Settings","Button","Header","navigation","MaterialIcons","openDrawer","Stack","createStackNavigator","genericNavigator","component","Navigator","initialRouteName","screenOptions","Screen","options","headerTitle","Drawer","createDrawerNavigator","drawerNavigator","NavigationContainer","theme","App","navigator","window","addEventListener","serviceWorker","register","scope","then","catch","module","exports"],"mappings":"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","file":"static/js/app.d8f2f80a.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native\";\n\n// light\n// dark\n// amoled\nexport var Theme = localStorage.getItem(\"theme\") || \"light\";\n\nexport function setAndStoreTheme(value) {\n  localStorage.setItem(\"theme\", value);\n}\n\nexport const Colours = {\n  light: {\n    colors: {\n      primary: \"#000\",\n      background: \"#f2f2f2\",\n      border: \"#000\",\n      card: '#fff',\n    },\n    navHeader: {\n      headerStyle: {\n        backgroundColor: '#999',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      }\n    },\n    backgroundedLabelText: \"#101010\",\n    borderColour: \"#4d4d4d\",\n    requiredLabel: \"aaade87\",\n\n    bossColour:  \"#d2691e\",\n    areaColour:  \"blue\",\n    questColour: \"green\",\n    wpColour:    \"#84a9e1\",\n    trialColour: \"teal\",\n  },\n  dark: {\n    colors: {\n      primary: \"#eee\",\n      background: \"#121212\",\n      card: '#121212',\n      border: '#eee',\n      text: \"#eee\"\n    },\n    navHeader: {\n      headerStyle: {\n        backgroundColor: '#3700B3',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      }\n    },\n    backgroundedLabelText: \"#101010\",\n    borderColour: \"#4d4d4d\",\n    requiredLabel: \"#aaade87\",\n\n    bossColour:  \"#ffa500\",\n    areaColour:  \"#9999ff\",\n    questColour: \"#66ff66\",\n    wpColour:    \"#84a9e1\",\n    trialColour: \"teal\",\n  },\n  amoled: {\n    colors: {\n      primary: \"#eee\",\n      background: \"#000\",\n      card: '#000',\n      border: '#eee',\n      text: \"#eee\"\n    },\n    navHeader: {\n      headerStyle: {\n        backgroundColor: '#000',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      }\n    },\n    backgroundedLabelText: \"#101010\",\n    borderColour: \"#4d4d4d\",\n    requiredLabel: \"#aaade87\",\n\n    bossColour:  \"#ffa500\",\n    areaColour:  \"#9999ff\",\n    questColour: \"#66ff66\",\n    wpColour:    \"#84a9e1\",\n    trialColour: \"teal\",\n  }\n}\n\nexport const globalStyles = StyleSheet.create({\n  genericPage: {\n    minHeight: 50,\n    paddingTop: 2,\n    paddingBottom: 2,\n    alignItems: \"center\",\n  },\n  minimalContainer: {\n    flex: 1,\n    alignItems: 'center'\n  },\n  borderlessContainer: {\n    flexDirection: \"row\",\n    paddingTop: 2,\n    paddingBottom: 20,\n  },\n  container: {\n    flexDirection: \"row\",\n    minHeight: 50,\n    paddingTop: 2,\n    paddingBottom: 2,\n    borderBottomWidth: 2,\n    borderColor: Colours[Theme].borderColour\n  },\n  stackedContainer: {\n    minHeight: 50,\n    paddingTop: 2,\n    paddingBottom: 2,\n    paddingLeft: 40,\n    borderBottomWidth: 2,\n    borderColor: Colours[Theme].borderColour\n  },\n  imageContainer: {\n    paddingTop: 30,\n    paddingBottom: 30,\n    width: \"100%\",\n  },\n  bottomContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginBottom: 10\n  },\n  textLink: {\n    color: Colours[Theme].trialColour\n  },\n  label: {\n    display: \"flex\",\n    alignItems: \"center\",\n    width: 30,\n    justifyContent: \"center\",\n  },\n  labelContainer: {\n    width: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  labelContainerLeft: {\n    marginLeft: 2,\n  },\n  labelContainerRight: {\n    marginRight: 2,\n  },\n  labelText: {\n    fontSize:  20,\n    textAlign: \"center\",\n    color:     Colours[Theme].colors.primary,\n  },\n  backgroundedLabelText: {\n    fontSize:  20,\n    textAlign: \"center\",\n    color:     Colours[Theme].backgroundedLabelText,\n  },\n  waypointActiveContainer: {\n    backgroundColor: Colours[Theme].wpColour\n  },\n  waypointInactiveContainer: {\n  },\n  requiredContainer: {\n    backgroundColor: Colours[Theme].requiredLabel\n  },\n  optionalContainer: {\n    flexDirection: \"row\"\n  },\n  optionalLabelContainer: {\n  },\n  waypointLabelActive: {\n    backgroundColor: Colours[Theme].wpColour\n  },\n  waypointLabelInactive: {},\n  centerBlock: {\n    flex: 1,\n    width: \"80%\"\n  },\n  requiredContainer:{\n    backgroundColor: \"#aade87\"\n  },\n  header: {\n    width:  \"100%\",\n    height: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  headerText: {\n    fontSize:   18,\n    color:      Colours[Theme].colors.primary,\n    fontWeight: \"bold\"\n  },\n  section: {\n    padding: 10,\n    width:  \"100%\",\n    flexDirection: \"row\",\n    justifyContent: \"center\"\n  },\n  sectionText: {\n    fontSize:   18,\n    color:      Colours[Theme].colors.primary,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  text: {\n    color: Colours[Theme].colors.primary,\n  },\n  headerMenuIcon: {\n    fontSize: 28,\n    color:    Colours[Theme].colors.primary,\n    position: \"absolute\",\n    left:     0\n  },\n  info: {\n    flexDirection: \"row\"\n  },\n  infoItem: {\n    padding: 5,\n    color:   Colours[Theme].colors.primary,\n  },\n  complete: {\n    opacity: .2\n  },\n  required: {\n    fontWeight: \"bold\"\n  },\n  boss: {\n    color: Colours[Theme].bossColour\n  },\n  area: {\n    color: Colours[Theme].areaColour\n  },\n  quest: {\n    color: Colours[Theme].questColour\n  },\n  waypoint: {\n    color: Colours[Theme].wpColour\n  },\n  trial: {\n    color: Colours[Theme].trialColour\n  }\n});\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { AsyncStorage } from \"react-native\";\n\nexport const ProgressContext = createContext();\n\nconst initialState = JSON.parse(localStorage.getItem(\"PoELCProgress\")) || {\n  completed: []\n}\n\nconst reducer = (state, id) => {\n  var newState\n  if (!id) {\n    // We've been given no ID (probably from a progress reset)\n    // TODO This is a hack\n    newState = {\n      completed: []\n    }\n  } else if (!state.completed.includes(id)) {\n    newState = {\n      completed: [...state.completed, id]\n    }\n  } else {\n    newState = {\n      completed: state.completed.filter(\n        (checkId) => checkId != id\n      )\n    }\n  }\n  storeData(newState)\n  return newState\n}\n\nconst storeData = async (progress) => {\n  try {\n    await AsyncStorage.setItem(\"PoELCProgress\",\n                               JSON.stringify(progress));\n  } catch (error) {\n    //TODO - error saving data\n    console.error(\"Saving error\");\n    console.error(error);\n  }\n}\n\nexport const ProgressContextProvider = (props) => {\n  const [progress, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <ProgressContext.Provider value={[progress, dispatch]}>\n      {props.children}\n    </ProgressContext.Provider>\n  );\n}\n","import React from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\n\n/**\n * Parses a fragment of an objective, replacing:\n *\n * - *Boss*  with boss-styled text\n * - _Area_  with area-styled text\n * - #Quest# with quest-styled text\n * - =Trial= with trial-styled text\n * - /WP/    with WP-styled text\n */\nfunction parseTextFragment(taskId, fragment, defaultStyle, index) {\n  fragment += \"\";\n\n  var fragments   = [];\n  var splitString = [];\n  var type        = \"\";\n  if (fragment.includes(\"*\")) {\n    splitString = fragment.split(\"*\");\n    type = \"boss\";\n  } else if (fragment.includes(\"_\")) {\n    splitString = fragment.split(\"_\");\n    type = \"area\";\n  } else if (fragment.includes(\"#\")) {\n    splitString = fragment.split(\"#\");\n    type = \"quest\";\n  } else if (fragment.includes(\"=\")) {\n    splitString = fragment.split(\"=\");\n    type = \"trial\";\n  } else if (fragment.includes(\"/\")) {\n    splitString = fragment.split(\"/\");\n    type = \"waypoint\";\n  }\n\n  if (typeof index === \"undefined\") {\n    index = {\"i\": 0};\n  }\n\n  var uniqueKey = taskId + \"Text\" + type + index.i;\n\n  if (type !== \"\") {\n    splitString.forEach(function (value, idx) {\n      index.i++;\n      if (idx % 2 == 0) {\n        fragments = fragments.concat(parseTextFragment(taskId,\n                                                       value,\n                                                       defaultStyle,\n                                                       index));\n      } else {\n        var newStyle = [globalStyles[type]].concat(defaultStyle);\n        uniqueKey += idx.toString();\n        fragments.push(<Text key={ uniqueKey }\n                             style={ newStyle }>{value}</Text>);\n      }\n    });\n  } else {\n    fragments.push(<Text key={ uniqueKey }\n                         style={ globalStyles[\"text\"] }>{fragment}</Text>);\n  }\n\n  return fragments;\n}\n\nexport default class FormattedText extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    var taskId = this.props.taskId;\n    var style = this.props.style;\n\n    var indexObj = {\"i\": 0};\n\n    var ret = [];\n\n    if (this.props.children) {\n      this.props.children.forEach(function(value, index) {\n        ret.push(\n          <Text key={\"FormattedTextWrapper\" + taskId + index}>\n            { parseTextFragment(taskId, value, style, indexObj)}\n          </Text>\n        );\n      });\n    }\n\n    return ret;\n  }\n}\n","import React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {globalStyles} from \"../styles/global.js\";\n\nfunction HalfHeightLabel({text, lhs, containerStyle, textStyle}) {\n  return (\n    <View style={[globalStyles.labelContainer,\n                  containerStyle,\n                  lhs\n                  ? globalStyles.labelContainerLeft\n                  : globalStyles.labelContainerRight]}>\n      <Text style={textStyle}>{text}</Text>\n    </View>\n  );\n}\n\nexport function LeftLabel ({item}) {\n\n  return (<View>\n      <HalfHeightLabel text={item.minLvl}\n                       lhs={true}\n                       textStyle={globalStyles.labelText} />\n      <HalfHeightLabel text={item.hasWp ? \"WP\" : \"\"}\n               lhs={true}\n               containerStyle={item.hasWp\n                       ? globalStyles.waypointActiveContainer\n                       : globalStyles.waypointInactiveContainer}\n               textStyle={globalStyles.backgroundedLabelText}/>\n      </View>);\n}\n\nexport function RightLabel({item}) {\n  return (<View>\n      <HalfHeightLabel text={item.optional ? \"Opt\" : \"Req\"}\n               lhs={false}\n               containerStyle={item.optional\n                       ? globalStyles.optionalLabelContainer\n                       : globalStyles.requiredContainer}\n               textStyle={item.optional\n                          ? globalStyles.labelText\n                          : globalStyles.backgroundedLabelText }/>\n      <HalfHeightLabel text={item.directionArrow\n                   ? item.directionArrow\n                   : \"\"}\n               lhs={false}\n               textStyle={globalStyles.labelText}/>\n      </View>);\n}\n","import React, {useState} from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\n\nimport { Progress } from \"../data/progress.js\";\nimport FormattedText from \"../shared/formattedText.js\";\nimport {globalStyles} from \"../styles/global.js\";\n\nimport { LeftLabel, RightLabel } from \"../shared/stackedLabel.js\";\n\nexport default class LevellingItem extends React.PureComponent {\n\n  render() {\n    var item         = this.props.item;\n    var act          = this.props.act;\n    var complete     = this.props.complete;\n\n    var objectiveStyle = [];\n    var rewardStyle    = [globalStyles.infoItem];\n\n    if ( !item.optional ) {\n      objectiveStyle.push(globalStyles.required)\n    }\n\n    var objectiveLine = [];\n\n    var key = item.id;\n\n    objectiveLine.push(\n      <FormattedText key={key}\n                     taskId={item.id}\n                     style={objectiveStyle}>\n        {item.text}\n      </FormattedText>\n    );\n\n    var infoLine = [];\n    if (item.direction) {\n      var direction = \"?\";\n\n      switch (item.direction) {\n        case \"N\":\n          direction = \"↑\";\n          break;\n\n        case \"NE\":\n          direction = \"↗\";\n          break;\n\n        case \"E\":\n          direction = \"→\";\n          break;\n\n        case \"SE\":\n          direction = \"↘\";\n          break;\n\n        case \"S\":\n          direction = \"↓\";\n          break;\n\n        case \"SW\":\n          direction = \"↙\";\n          break;\n\n        case \"W\":\n          direction = \"←\";\n          break;\n\n        case \"NW\":\n          direction = \"↖\";\n          break;\n      }\n      item.directionArrow = direction;\n    }\n    if (item.rewards) {\n      var reward = [<Text>💰</Text>];\n      if (item.rewards.passive) {\n        reward.push(<Text style={rewardStyle}\n                          key={item.id + \"PassiveReward\"} >+{item.rewards.passive.num}</Text>);\n      }\n      if (item.rewards.item) {\n        reward.push(<Text style={rewardStyle}\n                          key={item.id + \"ItemReward\"}>{item.rewards.item}</Text>);\n      }\n      infoLine.push(<Text key={item.id + \"GenericReward\"}\n                          style={rewardStyle}>{reward}</Text>);\n    }\n\n    var itemStyle = [globalStyles.container]\n\n    if (complete) {\n      itemStyle.push(globalStyles.complete)\n    }\n\n    var pressHandler = () => {\n      this.props.pressHandler(this.props.item.id);\n    }\n\n    return (\n      <View key={\"LevellingContainer\" + item.id}>\n        <TouchableOpacity key={\"Touchable\" + item.id}\n                          onPress={pressHandler}>\n          <View key={\"ObjectiveContainer\" + item.id}\n                style={itemStyle}>\n            <LeftLabel key={item.id + \"LeftLabel\"} item={item}/>\n            <View style={globalStyles.centerBlock}>\n              { objectiveLine }\n              { infoLine }\n            </View>\n            <RightLabel key={item.id + \"RightLabel\"} item={item} />\n          </View>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n}\n","import React, {useContext} from 'react';\nimport { Text, SafeAreaView, View, SectionList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport LevellingItem from '../shared/levellingItem.js';\n\nimport { ProgressContext } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Levelling({route}) {\n  const [progress, dispatch] = useContext(ProgressContext);\n\n  const renderItemFunc = function({item, section}) {\n    return <LevellingItem act={section.num}\n                          item={ item }\n                          pressHandler={ dispatch }\n                          complete={progress.completed.includes(item.id)} />\n  };\n\n  return (\n    <SafeAreaView style={globalStyles.section}>\n      <SectionList\n        sections={content.acts}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItemFunc}\n        extraData={progress.progress}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={globalStyles.sectionText}>{title}</Text>\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n","import React from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default class PassiveItem extends React.Component {\n\n  /**\n   * Only update a component if its completed state has changed.\n   */\n  shouldComponentUpdate(nextProps) {\n    return nextProps.complete != this.props.complete;\n  }\n\n  render() {\n    var item         = this.props.item;\n    var act          = this.props.act;\n    var complete     = this.props.complete;\n    var pressHandler = this.props.pressHandler;\n    var passive = item.rewards.passive;\n\n    var objectiveStyle = [globalStyles.required];\n    if ( complete ) {\n      objectiveStyle.push(globalStyles.complete)\n    }\n\n    var objectiveLine = [\n      <FormattedText key={item.id + \"PassiveQuestText\"}\n                     style={objectiveStyle}\n                     taskId={item.id + \"QText\"}>\n        {[\"Quest: \" + passive.quest]}\n      </FormattedText>,\n      <FormattedText key={item.id + \"PassiveWpText\"}\n                     style={objectiveStyle}\n                     taskId={item.id + \"WPText\"}>\n      {[\"WP: \" + passive.wp]}\n      </FormattedText>\n    ];\n\n    if (passive.text) {\n      objectiveLine.push(\n        <FormattedText key={item.id + \"PassiveText\"}\n                       style={objectiveStyle}\n                       taskId={item.id + \"Text\"}>\n          {passive.text}\n        </FormattedText>);\n    }\n\n    return (\n      <TouchableOpacity onPress={() => pressHandler(item.id)}>\n        <View style={globalStyles.stackedContainer}>\n            { objectiveLine }\n        </View>\n      </TouchableOpacity>\n    )\n  }\n}\n","import React, {useContext} from 'react';\nimport { Text, SafeAreaView, View, SectionList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport PassiveItem from '../shared/passiveItem.js';\nimport { ProgressContext } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Passives() {\n  const [progress, dispatch] = useContext(ProgressContext);\n\n  const renderItemFunc = ({ item, section }) => (\n    <PassiveItem act={section.num}\n                 item={ item }\n                 pressHandler={ dispatch }\n                 complete={progress.completed.includes(item.id)} />\n  );\n\n  // Need to take a copy of the acts array else we end up modifying it and\n  // breaking all of the other sections\n  var passives = content.acts.map((act) => {\n    var o = Object.create(act);\n    o.data = o.data.filter((item) => {\n      return \"rewards\" in item && \"passive\" in item.rewards\n    });\n    return o;\n  });\n\n  return (\n    <SafeAreaView style={globalStyles.section}>\n      <SectionList\n        sections={passives}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItemFunc}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={globalStyles.sectionText}>{title}</Text>\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n","import React from 'react';\nimport { Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default class TrialItem extends React.Component {\n\n  /**\n   * Only update a component if its completed state has changed.\n   */\n  shouldComponentUpdate(nextProps) {\n    return nextProps.complete != this.props.complete;\n  }\n\n  render() {\n    var item         = this.props.item;\n    var act          = this.props.act;\n    var complete     = this.props.complete;\n    var pressHandler = this.props.pressHandler;\n    var trial        = item.rewards.trial;\n\n    var objectiveStyle = [globalStyles.required];\n    if ( complete ) {\n      objectiveStyle.push(globalStyles.complete)\n    }\n\n    var objectiveLine = [\n      <FormattedText key={item.id + \"objText\"}\n                     style={objectiveStyle}\n                     taskId={item.id + \"Obj\"}>\n        {[\"Trial: \" + trial.name]}\n      </FormattedText>,\n    ];\n\n    if (trial.wp) {\n      objectiveLine.push(\n        <FormattedText key={item.id + \"wpText\"}\n                       style={objectiveStyle}\n                       taskId={item.id + \"WP\"}>\n          {[\"WP: \" + trial.wp]}\n        </FormattedText>\n      );\n    }\n\n    if (trial.text) {\n      objectiveLine.push(\n        <FormattedText key={item.id + \"trialText\"}\n                       style={objectiveStyle}\n                       taskId={item.id + \"Text\"}>\n          {trial.text}\n        </FormattedText>);\n    }\n\n    return (\n      <View key={\"TrialContainer\" + item.id}>\n        <TouchableOpacity key={\"TouchableTrial\" + item.id}\n                          onPress={() => pressHandler(item.id)}>\n          <View key={\"TrialContainer\" + item.id }\n                style={globalStyles.stackedContainer}>\n              { objectiveLine }\n          </View>\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\n","import React, {useContext} from 'react';\nimport { Text, SafeAreaView, View, SectionList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport TrialItem from '../shared/trialItem.js';\nimport { ProgressContext } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Trials() {\n  const [progress, dispatch] = useContext(ProgressContext);\n\n  const renderItemFunc = ({ item, section }) => (\n    \"rewards\" in item && \"trial\" in item.rewards\n    ? <TrialItem act={section.num}\n                 item={ item }\n                 pressHandler={ dispatch }\n                 complete={progress.completed.includes(item.id)} />\n    : <Text></Text>\n  );\n\n  // Not every act has a trial, and it's ugly to include acts which don't\n  var trials = content.acts.map( (act) => {\n    var o = Object.create(act);\n    o.data = o.data.filter((item) => {\n      return \"rewards\" in item && \"trial\" in item.rewards\n    })\n    return o;\n  }).filter((act) => {\n    return act.data.length;\n  }).concat(content.maps);\n\n  return (\n    <SafeAreaView style={globalStyles.section}>\n      <SectionList\n        sections={trials}\n        keyExtractor={(item) => item.id}\n        renderItem={renderItemFunc}\n        renderSectionHeader={({ section: { title } }) => (\n          <Text style={globalStyles.sectionText}>{title}</Text>\n        )}\n      />\n    </SafeAreaView>\n  );\n}\n","export const images = {\n  usage: require(\"./how-to.png\")\n}\n","import React from 'react';\nimport { Linking, Text, View, Image} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport { images } from \"../assets/images.js\";\n\n\nexport default function About() {\n  return (\n    <View style={globalStyles.minimalContainer}>\n      <Text style={globalStyles.headerText}>How to read tasks</Text>\n      <View style={globalStyles.imageContainer}>\n        <Image source={images.usage}\n               style={{flex: 1, resizeMode: \"contain\", height:251,}}/>\n      </View>\n      <Text style={[globalStyles.headerText, globalStyles.textLink]}\n            onPress={() => Linking.openURL(\"https://github.com/FifteenFifty/PoELevellingCompanion\")}>\n        Github (PRs welcome!)\n      </Text>\n      <View style={globalStyles.bottomContainer}>\n        <Text style={globalStyles.textLink}\n              onPress={() => Linking.openURL(\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=DGRKE2P4M8XFS&currency_code=GBP&source=url\")}>\n          Donate\n        </Text>\n      </View>\n    </View>\n  );\n}\n","import React, {useContext} from 'react';\nimport { Text, View, Button} from 'react-native';\n\nimport { globalStyles, setAndStoreTheme } from \"../styles/global.js\";\nimport { ProgressContext } from \"../data/progress.js\";\n\n\n\nexport default function Settings() {\n  const [progress, dispatch] = useContext(ProgressContext);\n\n  const resetProgress = () => {\n    dispatch(null)\n  }\n\n  const lightTheme = () => {\n    setAndStoreTheme(\"light\")\n  }\n  const darkTheme = () => {\n    setAndStoreTheme(\"dark\")\n  }\n  const amoledTheme = () => {\n    setAndStoreTheme(\"amoled\")\n  }\n\n  return (\n      <View style={globalStyles.genericPage}>\n        <Text style={globalStyles.headerText}>Progress</Text>\n\n        <View style={globalStyles.borderlessContainer}>\n          <Button title=\"Reset progress\"\n                  onPress={resetProgress} />\n        </View>\n\n        <Text style={globalStyles.headerText}>Theme</Text>\n        <View style={globalStyles.borderlessContainer}>\n          <Button title=\"Light\"\n                  onPress={lightTheme} />\n          <Button title=\"Dark\"\n                  onPress={darkTheme} />\n          <Button title=\"AMOLED\"\n                  onPress={amoledTheme} />\n        </View>\n      </View>\n  );\n}\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nimport { globalStyles } from \"../styles/global.js\";\n\nexport default function Header( { navigation, title } ) {\n\n  const openMenu = () => {\n    navigation.openDrawer();\n  }\n\n  return (\n    <View style={globalStyles.header}>\n      <MaterialIcons style={globalStyles.headerMenuIcon}\n                     onPress={openMenu}\n                     name=\"menu\"/>\n      <Text style={globalStyles.headerText}>{title}</Text>\n    </View>\n  );\n}\n\n","import React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport Levelling from \"../screens/levelling\";\nimport Passives from \"../screens/passives\";\nimport Trials from \"../screens/trials\";\nimport About from \"../screens/about\";\nimport Settings from \"../screens/settings\";\n\nimport { Colours, Theme} from \"../styles/global.js\";\n\nimport Header from \"../shared/header.js\";\n\nconst Stack = createStackNavigator()\n\nexport default function genericNavigator( { navigation, route } ) {\n  var component = null;\n\n  switch (route.name) {\n    case \"Levelling\":\n      component = Levelling;\n      break;\n    case \"Passives\":\n      component = Passives;\n      break;\n    case \"Trials\":\n      component = Trials;\n      break;\n    case \"Settings\":\n      component = Settings;\n      break;\n    case \"About\":\n      component = About;\n      break;\n  }\n\n  return (\n    <Stack.Navigator initialRouteName={route.name}\n                screenOptions={Colours[Theme].navHeader}>\n      <Stack.Screen\n          name={route.name}\n          component={component}\n          options={{\n            headerTitle: () => <Header navigation={navigation}\n                                       title={route.name}/>,\n          }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport genericNavigator from './genericStack';\n\nimport {Theme, Colours, globalStyles} from \"../styles/global.js\";\n\nconst Drawer = createDrawerNavigator();\n\nconst startPage = \"About\"\n\nexport default function drawerNavigator() {\n  return (\n    <NavigationContainer theme={Colours[Theme]}>\n      <Drawer.Navigator initialRouteName={startPage}>\n        <Drawer.Screen name=\"Levelling\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Passives\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Trials\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Settings\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"About\"\n                       component={genericNavigator}/>\n      </Drawer.Navigator>\n    </NavigationContainer>\n  )\n}\n","import React from 'react';\n\nimport DrawerNavigator from \"./routes/drawer.js\";\nimport { ProgressContextProvider } from \"./data/progress.js\";\n\nimport { setTheme } from \"./styles/global.js\";\n\nexport default function App() {\n  return(\n    <ProgressContextProvider>\n      <DrawerNavigator/>\n    </ProgressContextProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/PoELevellingCompanion/expo-service-worker.js', { scope: '/PoELevellingCompanion/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/how-to.c9fa608a.png\";"],"sourceRoot":""}