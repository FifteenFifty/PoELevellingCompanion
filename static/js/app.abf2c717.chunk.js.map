{"version":3,"sources":["data/progress.js","styles/global.js","shared/formattedText.js","shared/levellingItem.js","screens/levelling.js","shared/passiveItem.js","screens/passives.js","shared/trialItem.js","screens/trials.js","screens/about.js","shared/header.js","routes/genericStack.js","routes/drawer.js","App.js","web-build/register-service-worker.js"],"names":["Progress","createContext","globalStyles","StyleSheet","create","container","padding","flex","backgroundColor","alignItems","justifyContent","header","width","height","flexDirection","headerText","fontSize","color","fontWeight","section","sectionText","headerMenuIcon","position","left","item","marginTop","borderColor","borderWidth","borderStyle","borderRadius","objective","info","infoItem","complete","textDecorationLine","opacity","required","boss","area","quest","waypoint","trial","FormattedText","props","text","Array","isArray","this","children","join","Text","key","taskId","parseTextFragment","fragment","defaultStyle","index","fragments","splitString","type","includes","split","uniqueKey","toString","forEach","value","idx","concat","newStyle","push","style","React","Component","LevellingItem","pressHandler","useContext","progress","console","log","id","objectiveStyle","rewardStyle","styles","optional","objectiveLine","o","wp","hasWp","View","infoLine","minLvl","direction","rewards","reward","passive","num","TouchableOpacity","onPress","Levelling","setProgress","toggleState","prevState","JSON","parse","stringify","i","content","acts","title","FlatList","data","tasks","renderItem","PassiveItem","Passives","filter","task","TrialItem","name","Trials","About","Header","navigation","MaterialIcons","openDrawer","Stack","createStackNavigator","genericNavigator","route","component","Navigator","initialRouteName","screenOptions","headerStyle","headerTintColor","headerTitleStyle","Screen","options","headerTitle","Drawer","createDrawerNavigator","drawerNavigator","NavigationContainer","App","useState","Provider","navigator","window","addEventListener","serviceWorker","register","scope","then","catch","error"],"mappings":"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","file":"static/js/app.abf2c717.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const Progress = createContext({});\n","import { StyleSheet } from \"react-native\";\n\nexport const globalStyles = StyleSheet.create({\n  container: {\n    padding:         20,\n    flex:            1,\n    backgroundColor: '#fff',\n    alignItems:      'center',\n    justifyContent:  'center',\n  },\n  header: {\n    width:  \"100%\",\n    height: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  headerText: {\n    fontSize:   18,\n    color:      \"#333\",\n    fontWeight: \"bold\"\n  },\n  section: {\n    padding: 10,\n    width:  \"100%\",\n    height: \"100%\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  sectionText: {\n    fontSize:   18,\n    color:      \"#333\",\n    fontWeight: \"bold\"\n  },\n  headerMenuIcon: {\n    fontSize: 28,\n    color:    \"#333\",\n    position: \"absolute\",\n    left:     0\n  },\n  item: {\n    padding:10,\n    marginTop: 10,\n    borderColor: \"#bbb\",\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    borderRadius: 10\n  },\n  objective: {\n    flexDirection: \"row\"\n  },\n  info: {\n    flexDirection: \"row\"\n  },\n  infoItem: {\n    padding: 5\n  },\n  complete: {\n    textDecorationLine: \"line-through\",\n    opacity: .25\n  },\n  required: {\n    fontWeight: \"bold\"\n  },\n  boss: {\n    //TODO\n    color: \"red\"\n  },\n  area: {\n    //TODO\n    color: \"blue\"\n  },\n  quest: {\n    //TODO\n    color: \"green\"\n  },\n  waypoint: {\n    //TODO\n    color: \"lightblue\"\n  },\n  trial: {\n    //TODO\n    color: \"teal\"\n  }\n});\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\n\n/**\n * Parses a fragment of an objective, replacing:\n *\n * - *Boss*  with boss-styled text\n * - _Area_  with area-styled text\n * - #Quest# with quest-styled text\n * - =Trial= with trial-styled text\n * - /WP/    with WP-styled text\n */\nfunction parseTextFragment(taskId, fragment, defaultStyle, index) {\n  fragment += \"\";\n\n  var fragments   = [];\n  var splitString = [];\n  var type        = \"\";\n  if (fragment.includes(\"*\")) {\n    splitString = fragment.split(\"*\");\n    type = \"boss\";\n  } else if (fragment.includes(\"_\")) {\n    splitString = fragment.split(\"_\");\n    type = \"area\";\n  } else if (fragment.includes(\"#\")) {\n    splitString = fragment.split(\"#\");\n    type = \"quest\";\n  } else if (fragment.includes(\"=\")) {\n    splitString = fragment.split(\"=\");\n    type = \"trial\";\n  } else if (fragment.includes(\"/\")) {\n    splitString = fragment.split(\"/\");\n    type = \"waypoint\";\n  }\n\n  if (typeof index === \"undefined\") {\n    index = 0;\n  }\n\n  var uniqueKey = taskId + \"Text\" + index.toString();\n  index++;\n\n  if (type !== \"\") {\n    splitString.forEach(function (value, idx) {\n      if (idx % 2 == 0) {\n        fragments = fragments.concat(parseTextFragment(taskId,\n                                                            value,\n                                                            defaultStyle,\n                                                            ++index));\n      } else {\n        var newStyle = defaultStyle.concat([globalStyles[type]]);\n        uniqueKey += idx.toString();\n        fragments.push(<Text key={ uniqueKey }\n                             style={ newStyle }>{value}</Text>);\n      }\n    });\n  } else {\n    fragments.push(<Text key={ uniqueKey }\n                         style={ defaultStyle }>{fragment}</Text>);\n  }\n\n  return fragments;\n}\n\nexport default class FormattedText extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n\n    var text = \"\";\n\n    if (Array.isArray(this.props.children)) {\n      text = this.props.children.join(\"\");\n    } else {\n      text = this.props.children;\n    }\n\n    return (\n      <Text key={ this.props.taskId }>\n        { parseTextFragment(this.props.taskId,\n                            text,\n                            this.props.style) }\n      </Text>);\n  }\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { Progress } from \"../data/progress.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default function LevellingItem({item, complete, pressHandler}) {\n\n  const [progress, setProgress] = useContext(Progress);\n  console.log(\"Rendering: \" + item.id);\n\n  var objectiveStyle = [];\n  var rewardStyle    = [styles.infoItem];\n  if ( item.id in progress) {\n    objectiveStyle.push(styles.complete)\n    rewardStyle.push(styles.complete);\n  }\n  if ( !item.optional ) {\n    objectiveStyle.push(styles.required)\n  }\n\n  var objectiveLine = [];\n\n  var key = item.id;\n\n  if (Array.isArray(item.text)) {\n    item.text.forEach(function (value, index) {\n      key += index.toString();\n      var o = (<FormattedText taskId={item.id}\n                              style={objectiveStyle}>\n                 {value}\n               </FormattedText>);\n      objectiveLine.push(o);\n    });\n  } else {\n    var wp = \"\";\n\n    if (item.hasWp) {\n      wp = \" /[WP]/\";\n    }\n\n    var o = (<FormattedText taskId={item.id}\n                            style={objectiveStyle}>\n               {item.text + wp}\n             </FormattedText>);\n\n    objectiveLine.push(<View key={key} style={styles.objective}>{ o }</View>);\n  }\n\n  var infoLine = [];\n  if (item.minLvl) {\n    infoLine.push(<Text key=\"{key}MinLvl\"\n                        style={rewardStyle}>Min lvl: {item.minLvl}</Text>);\n  }\n  if (item.direction) {\n    var direction = \"?\";\n\n    switch (item.direction) {\n      case \"N\":\n        direction = \"↑\";\n        break;\n\n      case \"NE\":\n        direction = \"↗\";\n        break;\n\n      case \"E\":\n        direction = \"→\";\n        break;\n\n      case \"SE\":\n        direction = \"↘\";\n        break;\n\n      case \"S\":\n        direction = \"↓\";\n        break;\n\n      case \"SW\":\n        direction = \"↙\";\n        break;\n\n      case \"W\":\n        direction = \"←\";\n        break;\n\n      case \"NW\":\n        direction = \"↖\";\n        break;\n    }\n    infoLine.push(<Text key=\"{item.id}Direction\"\n                        style={rewardStyle}>Go {direction}</Text>);\n  }\n  if (item.rewards) {\n    var reward = [];\n    if (item.rewards.passive) {\n      reward.push(<Text style={rewardStyle}\n                        key=\"{item.id}Passive\" >+{item.rewards.passive.num}</Text>);\n    }\n    if (item.rewards.item) {\n      reward.push(<Text style={rewardStyle}\n                        key=\"{item.id}Item\">{item.rewards.item}</Text>);\n    }\n    infoLine.push(<Text key=\"{item.id}Reward\"\n                        style={rewardStyle}>Reward: {reward}</Text>);\n  }\n\n  return (\n    <TouchableOpacity onPress={() => pressHandler(item.id)}>\n      <View style={styles.item}>\n    <View>\n        { objectiveLine }\n    </View>\n        <View style={styles.info}>\n          { infoLine }\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n}\n\nconst styles = StyleSheet.create({\n  item: {\n    padding:10,\n    marginTop: 10,\n    borderColor: \"#bbb\",\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    borderRadius: 10\n  },\n  objective: {\n    flexDirection: \"row\"\n  },\n  info: {\n    flexDirection: \"row\"\n  },\n  infoItem: {\n    padding: 5\n  },\n  complete: {\n    textDecorationLine: \"line-through\",\n    opacity: .25\n  },\n  required: {\n    fontWeight: \"bold\"\n  },\n  boss: {\n    //TODO\n    color: \"red\"\n  },\n  area: {\n    //TODO\n    color: \"blue\"\n  },\n  quest: {\n    //TODO\n    color: \"green\"\n  },\n  waypoint: {\n    //TODO\n    color: \"lightblue\"\n  },\n  trial: {\n    //TODO\n    color: \"teal\"\n  }\n})\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, View, FlatList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport LevellingItem from '../shared/levellingItem.js';\n\nimport { Progress } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Levelling() {\n\n  const [progress, setProgress] = useContext(Progress);\n\n  const toggleState = function(id) {\n    setProgress((prevState) => {\n      prevState[id] = true;\n      return JSON.parse(JSON.stringify(prevState));\n    });\n  }\n\n  var container = [];\n  for (var i = 1; i < 11; i++) {\n    container.push(\n      <View style={globalStyles.section}>\n        <Text style={globalStyles.sectionText}>\n          {content.acts[i].title}\n        </Text>\n      </View>\n    );\n\n    container.push(\n      <FlatList\n        data={content.acts[i].tasks}\n        renderItem={({ item }) => (\n          <LevellingItem item={ item }\n                         pressHandler={ toggleState }/>\n        )}\n      />\n    );\n  }\n\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        {container}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default function PassiveItem({item, progress, pressHandler}) {\n  var passive = item.rewards.passive;\n  console.log(\"I am: \" + item.id);\n  console.log(\"Progress is: \");\n  console.log(progress);\n\n  var objectiveStyle = [globalStyles.required];\n  if ( item.id in progress ) {\n    console.log(\"IM DONE\");\n    objectiveStyle.push(globalStyles.complete)\n  }\n\n  var objectiveLine = [\n    <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n      Quest: {passive.quest}\n    </FormattedText>,\n    <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n      WP: {passive.wp}\n    </FormattedText>\n  ];\n\n  if (passive.text) {\n    if (Array.isArray(passive.text)) {\n      passive.text.forEach(function (value, index) {\n        key += index.toString();\n        var o = (<FormattedText taskId={passive.id}\n                                style={objectiveStyle}>\n                   {value}\n                 </FormattedText>);\n        objectiveLine.push(o);\n      });\n    } else {\n      objectiveLine.push(\n        <FormattedText style={objectiveStyle}\n                       taskId={item.id}>\n          {passive.text}\n        </FormattedText>);\n    }\n  }\n\n  var key = item.id;\n\n  return (\n    <TouchableOpacity onPress={() => pressHandler(item.id)}>\n      <View style={globalStyles.item}>\n        <View>\n          { objectiveLine }\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, View, FlatList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport PassiveItem from '../shared/passiveItem.js';\nimport { Progress } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Passives() {\n\n  const [progress, setProgress] = useContext(Progress);\n\n  const toggleState = function(id) {\n    setProgress((prevState) => {\n      prevState[id] = true;\n      return JSON.parse(JSON.stringify(prevState));\n    });\n  }\n\n  var container = [];\n  for (var i = 1; i < 11; i++) {\n    container.push(\n      <View style={globalStyles.section}>\n        <Text style={globalStyles.sectionText}>\n          {content.acts[i].title}\n        </Text>\n      </View>\n    );\n    container.push(\n      <FlatList\n        data={content.acts[i].tasks.filter(\n          task => \"rewards\" in task && \"passive\" in task.rewards)}\n        renderItem={({ item, index }) => (\n          <PassiveItem item={ item }\n                       progress={ progress }\n                       pressHandler={ toggleState }/>\n        )}\n      />\n    );\n  }\n\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        {container}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport FormattedText from \"../shared/formattedText.js\";\n\nexport default function TrialItem({item, progress, pressHandler}) {\n  var trial = item.rewards.trial;\n\n  var objectiveStyle = [globalStyles.required];\n  if ( item.id in progress ) {\n    objectiveStyle.push(globalStyles.complete)\n  }\n\n  var objectiveLine = [\n    <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n      Trial: {trial.name}\n    </FormattedText>,\n  ];\n\n  if (trial.wp) {\n    objectiveLine.push(\n      <FormattedText style={objectiveStyle}\n                   taskId={item.id}>\n        WP: {trial.wp}\n      </FormattedText>\n    );\n  }\n\n  if (trial.text) {\n    if (Array.isArray(trial.text)) {\n      trial.text.forEach(function (value, index) {\n        var o = (<FormattedText taskId={trial.id}\n                                style={objectiveStyle}>\n                   {value}\n                 </FormattedText>);\n        objectiveLine.push(o);\n      });\n    } else {\n      objectiveLine.push(\n        <FormattedText style={objectiveStyle}\n                       taskId={item.id}>\n          {trial.text}\n        </FormattedText>);\n    }\n  }\n\n  return (\n    <TouchableOpacity onPress={() => pressHandler(item.id)}>\n      <View style={globalStyles.item}>\n        <View>\n          { objectiveLine }\n        </View>\n      </View>\n    </TouchableOpacity>\n  )\n}\n","import React, {useContext} from 'react';\nimport { StyleSheet, Text, View, FlatList} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\nimport TrialItem from '../shared/trialItem.js';\nimport { Progress } from \"../data/progress.js\";\n\nimport content from '../data/content.json';\n\nexport default function Trials() {\n\n  const [progress, setProgress] = useContext(Progress);\n\n  const toggleState = function(id) {\n    setProgress((prevState) => {\n      prevState[id] = true;\n      return JSON.parse(JSON.stringify(prevState));\n    });\n  }\n\n  var container = [];\n  for (var i = 1; i < 11; i++) {\n    container.push(\n      <View style={globalStyles.section}>\n        <Text style={globalStyles.sectionText}>\n          {content.acts[i].title}\n        </Text>\n      </View>\n    );\n\n    container.push(\n      <FlatList\n        data={content.acts[i].tasks.filter(\n          task => \"rewards\" in task && \"trial\" in task.rewards)}\n        renderItem={({ item, index }) => (\n          <TrialItem item={ item }\n                     progress={ progress }\n                     pressHandler={ toggleState }/>\n        )}\n      />\n    );\n  }\n\n  // Trials are special. They exist in maps too\n  container.push(\n    <View style={globalStyles.section}>\n      <Text style={globalStyles.sectionText}>\n        {content.acts[\"maps\"].title}\n      </Text>\n    </View>\n  );\n\n  container.push(\n    <FlatList\n      data={content.acts[\"maps\"].tasks.filter(\n        task => \"rewards\" in task && \"trial\" in task.rewards)}\n      renderItem={({ item, index }) => (\n        <TrialItem item={ item }\n                   progress={ progress }\n                   pressHandler={ toggleState }/>\n      )}\n    />\n  );\n\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        {container}\n      </View>\n    </View>\n  );\n}\n","import React from 'react';\nimport { StyleSheet, Text, View} from 'react-native';\n\nimport { globalStyles } from \"../styles/global.js\";\n\n\nexport default function About() {\n  return (\n    <View style={globalStyles.header}>\n      <View>\n        <Text style={globalStyles.headerText}>This is the about page</Text>\n        <Text style={globalStyles.headerText}>How lovely</Text>\n      </View>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\n\nimport { globalStyles } from \"../styles/global.js\";\n\nexport default function Header( { navigation, title } ) {\n\n  const openMenu = () => {\n    navigation.openDrawer();\n  }\n\n  return (\n    <View style={globalStyles.header}>\n      <MaterialIcons style={globalStyles.headerMenuIcon}\n                     onPress={openMenu}\n                     name=\"menu\"/>\n      <Text style={globalStyles.headerText}>{title}</Text>\n    </View>\n  );\n}\n\n","import React from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\n\nimport Levelling from \"../screens/levelling\";\nimport Passives from \"../screens/passives\";\nimport Trials from \"../screens/trials\";\nimport About from \"../screens/about\";\n\n\nimport Header from \"../shared/header.js\";\n\nconst Stack = createStackNavigator()\n\nexport default function genericNavigator( { navigation, route } ) {\n  var component = null;\n\n  switch (route.name) {\n    case \"Levelling\":\n      component = Levelling;\n      break;\n    case \"Passives\":\n      component = Passives;\n      break;\n    case \"Trials\":\n      component = Trials;\n      break;\n    case \"About\":\n      component = About;\n      break;\n  }\n\n  return (\n    <Stack.Navigator initialRouteName={route.name}\n    screenOptions={{\n      headerStyle: {\n        backgroundColor: '#999',\n      },\n      headerTintColor: '#fff',\n      headerTitleStyle: {\n        fontWeight: 'bold',\n      },\n    }}\n    >\n      <Stack.Screen\n          name={route.name}\n          component={component}\n          options={{\n            headerTitle: () => <Header navigation={navigation}\n                                       title={route.name}/>,\n          }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport genericNavigator from './genericStack';\n\nconst Drawer = createDrawerNavigator();\n\nexport default function drawerNavigator() {\n  return (\n    <NavigationContainer>\n      <Drawer.Navigator initialRouteName=\"Levelling\">\n        <Drawer.Screen name=\"Levelling\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Passives\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"Trials\"\n                       component={genericNavigator}/>\n        <Drawer.Screen name=\"About\"\n                       component={genericNavigator} />\n      </Drawer.Navigator>\n    </NavigationContainer>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nimport { Progress } from './data/progress.js';\nimport { globalStyles } from \"./styles/global.js\";\nimport DrawerNavigator from \"./routes/drawer.js\";\n\nexport default function App() {\n  const [progress, setProgress] = useState({\"currentAct\": 1});\n\n  return(\n    <Progress.Provider value={[progress, setProgress]}>\n      <DrawerNavigator />\n    </Progress.Provider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/PoELevellingCompanion/expo-service-worker.js', { scope: '/PoELevellingCompanion/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}